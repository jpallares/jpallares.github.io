<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://juan.pallares.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://juan.pallares.me/" rel="alternate" type="text/html" /><updated>2020-04-12T17:30:20+02:00</updated><id>https://juan.pallares.me/feed.xml</id><title type="html">Juan Pallarès Garbí</title><subtitle>Landing page.</subtitle><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><entry><title type="html">Remote working tips (COVID-19)</title><link href="https://juan.pallares.me/remote-working-tips/" rel="alternate" type="text/html" title="Remote working tips (COVID-19)" /><published>2020-04-11T00:00:00+02:00</published><updated>2020-04-11T00:00:00+02:00</updated><id>https://juan.pallares.me/remote-working-tips</id><content type="html" xml:base="https://juan.pallares.me/remote-working-tips/">&lt;p&gt;Before this pandemic my experience working remotely was almost non-existent. Maybe half a day because I had a personal matter to attend…or one day the whole team works remotely just to see we are able. But then, suddenly, we are forced to work 100% of our time remotely.&lt;/p&gt;

&lt;h3 id=&quot;colocation---i-miss-my-team&quot;&gt;Colocation - I miss my team&lt;/h3&gt;

&lt;p&gt;At the beginning it was hard for us, &lt;strong&gt;we are the kind of team that is in constant communication&lt;/strong&gt;, we sit right to each other, we do pair programming often and we are used to just turn ourselves and ask: “Hey guys this functionality is driving me crazy, can somebody help me?” or “I just created an MR, can somebody take a look?” and now if I turn around I just see my room wall and some old books. Apart from my own team, another teams or the business is also very close, like 5 to 10 meters distance.&lt;/p&gt;

&lt;p&gt;How did we tackle this issue? we do a &lt;strong&gt;sync call every morning via &lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt;&lt;/strong&gt; (which was our default tool for video calls way before this crisis started) and during the day we may do one or two more depending in our needs. We tried having a zoom call all day open with everybody muted and just unmuted and talk if you need help, it didn’t work for us. We also communicate via &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;, every team member notifies when he starts to work and when they are leaving, and also the lunch break. It may feel too strict and I know that &lt;strong&gt;companies that work 100% remote follow a much more async style of working, but remember we are used to work together you can see our way of working as a trade-off between being fully remote and a colocated team pair programming most of the day&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;working-hours&quot;&gt;Working hours&lt;/h3&gt;

&lt;p&gt;This is a &lt;strong&gt;double-edged sword&lt;/strong&gt;. Working remotely can provoke that you &lt;strong&gt;procastinate&lt;/strong&gt; too much, you are at home ad you have much more distractions around or on the other hand, you &lt;strong&gt;never really stop working&lt;/strong&gt;, maybe the only computer you have is the work computer so you get notified about something in slack is difficult to disconnect.
What I do, and I can do this because I’m not a parent (people in this situation with children are real heroes) is working as close as possible to the schedule I had before. I’m a creature of habit and I’m trying to use this to my advantage, so aproximately I work from 9am to 6pm with a 1h lunch break and if helps me focus much more than working some hours scattered through the day. Anyway, this depends a lot on the person and I’m saying only what worked for me.&lt;/p&gt;

&lt;h3 id=&quot;home-office&quot;&gt;Home office&lt;/h3&gt;

&lt;p&gt;We were lucky our company allowed us to take home the screens, keyboard, etc. everything we would need to work from home. You need to be comfortable and ideally as close as possible and to the desk you have at the office. Anyway is also good to switch the place you work during the day, you gonna stay at home all day at least switch the place you are staying inside home. Half an hour in the balcony now that is sunny?
My setup is two QHD screens connected a MacBook Pro and external keyboard and mouse I’m pretty comfortable, what I’m struggling with is the placement of the webcam, I want have it in front of my face so people can feel I talk to them but I used to set the laptop on the side, anyway not a big problem.&lt;/p&gt;

&lt;h3 id=&quot;sports&quot;&gt;Sports&lt;/h3&gt;

&lt;p&gt;In a normal situation I do sport almost daily and twice per week I do it at lunch time, me and some coworkers do a 45 minutes HIIT training and then get a shower and eat in front of the computer. This is something I really miss, it helped disconnect a lot and often I was stuck on something and after training I saw clearly what was the issue. What I’m doing now is traying to train everyday too, even if less motivated and just want to be on the sofa I force myself. How to train? there are plenty of videos now in Youtube, I recommend &lt;a href=&quot;https://www.youtube.com/watch?v=vc1E5CfRfos&quot;&gt;this one&lt;/a&gt;. Even if you weren’t training before I believe now is a good time to start, otherwise being confined we almost don’t move and being sedentary can impact your health.&lt;/p&gt;

&lt;p&gt;What has been your experience so far working from home?&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="remote work" /><category term="covid-19" /><category term="tips" /><category term="job" /><category term="cofinement" /><summary type="html">Sharing my experience after 4 weeks of working remotely (and confined)</summary></entry><entry><title type="html">Raspberry Pi 3 III Pi-hole PiVPN</title><link href="https://juan.pallares.me/raspberry-pi-hole-vpn/" rel="alternate" type="text/html" title="Raspberry Pi 3 III Pi-hole PiVPN" /><published>2017-09-03T00:00:00+02:00</published><updated>2017-09-03T00:00:00+02:00</updated><id>https://juan.pallares.me/raspberry-pi-hole-vpn</id><content type="html" xml:base="https://juan.pallares.me/raspberry-pi-hole-vpn/">&lt;p&gt;In this final post I will talk about things you can do with an always running pi not related to media. That’s why is a bonus track.&lt;/p&gt;

&lt;h3 id=&quot;pi-hole---block-ads-in-your-local-network&quot;&gt;&lt;a href=&quot;https://pi-hole.net/&quot;&gt;Pi-hole&lt;/a&gt; - Block ads in your local network&lt;/h3&gt;

&lt;p&gt;I’m used to have always installed an ad-blocker on my browser, the web ads got out of hand long time ago with giant banners that block all the screen so it’s more like a survival thing. The problem comes with the phone browser, there are no good blockers there.&lt;/p&gt;

&lt;p&gt;So imagine a software that blocks the ads but not once they are in the browser, before, they don’t even arrive to your network, your network performance improves, this is Pi-Hole. It even blocks the ads you get on the phone games, amazing.&lt;/p&gt;

&lt;p&gt;The installation is very easy and once you have done you can access to manager web with all the info about what’s being blocked, etc.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://install.pi-hole.net | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../images/pihole.PNG&quot; alt=&quot;Pi-hole&quot; title=&quot;Pi-hole&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;pivpn&quot;&gt;&lt;a href=&quot;http://www.pivpn.io/&quot;&gt;PiVPN&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;It’s really useful to have a VPN available if you need to use internet in a typical airport “free wifi”, the ones that are not recommended to use with sensible data. PiVPN installs &lt;strong&gt;OpenVPN&lt;/strong&gt; on your raspberri in a very simple way. It all starts with a curl command like with pi-hole&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -L https://install.pivpn.io | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once installed you can create clients for windows/mac/android/iphone.&lt;/p&gt;

&lt;h3 id=&quot;free-dns&quot;&gt;Free DNS&lt;/h3&gt;

&lt;p&gt;The only totally free dns provider I found, that does not even send an email monthly to reactivate your account is freedns.afraid.org. You can refresh the IP with a cron job (later more detail about that)&lt;/p&gt;

&lt;h3 id=&quot;backup&quot;&gt;Backup&lt;/h3&gt;
&lt;p&gt;You can create a backup (.img) of your SD card to a network / USB drive while the card is inserted in your pi.&lt;/p&gt;

&lt;p&gt;Create an image of the card currently in the pi to a network drive / USB drive using the dd command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dd if=/dev/mmcblk0p2 of=/home/pi/networkdrive/my.img bs=1M
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(replace &lt;strong&gt;/dev/mmcblk0p2&lt;/strong&gt; with your own SD card and &lt;strong&gt;/home/pi/networkdrive/my.img&lt;/strong&gt; with your own network drive / USB drive + image file name)&lt;/p&gt;

&lt;p&gt;And if we want this to run periodically? keep reading&lt;/p&gt;

&lt;h3 id=&quot;self-maintenance-with-cron-jobs&quot;&gt;Self maintenance with cron jobs&lt;/h3&gt;

&lt;p&gt;Last but not least, since the raspberry will be running 24/7 it’s a good idea to run some commands from time to time to have everything running smoothly. I do it with &lt;a href=&quot;https://en.wikipedia.org/wiki/Cron&quot;&gt;cron&lt;/a&gt; jobs. If you run this command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo crontab -e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll see the jobs that need root rights to run. I have the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@daily dd if=/dev/mmcblk0p2 of=/home/pi/networkdrive/rasp-`date +\%Y\%m\%d\%H\%M\%S`.img bs=1M

0 3 * * * /usr/bin/apt-get update &amp;amp;&amp;amp;  /usr/bin/apt-get upgrade -q -y &amp;gt;&amp;gt; /var/log/apt/myupdates.log

0 5 * * 0 reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Well the first one is the command that makes the backup but the name depends on the date and time so I can have backups of several days in the same folder.&lt;/p&gt;

&lt;p&gt;The second one is simply and update and an upgrade that writes a log for debug purposes. It runs daily at 3am. The third is that once a week I want the raspberry to do a reboot at 5am.&lt;/p&gt;

&lt;p&gt;Now if I run this other command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crontab -e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can see more jobs I have, one is the free DNS to work&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0 5 * * * find /media/netdisk/backup/ -mindepth 1 -type f -mtime +3 -delete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only one left deletes the backup files older than 3 days, otherwise my HD was full very easily and I had to delete the backups manually, no way!&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="ad" /><category term="block" /><category term="VPN" /><category term="raspberry pi" /><category term="openvpn" /><category term="pi-hole" /><category term="pivpn" /><summary type="html">Filter all the ads in you local net (Pi-Hole) and create VPN server (PiVPN)</summary></entry><entry><title type="html">Raspberry Pi 3 a.k.a the 24/7 auto downloader II</title><link href="https://juan.pallares.me/raspberry-pi-autodownloader-2/" rel="alternate" type="text/html" title="Raspberry Pi 3 a.k.a the 24/7 auto downloader II" /><published>2017-05-03T00:00:00+02:00</published><updated>2017-05-03T00:00:00+02:00</updated><id>https://juan.pallares.me/raspberry-pi-autodownloader-2</id><content type="html" xml:base="https://juan.pallares.me/raspberry-pi-autodownloader-2/">&lt;p&gt;Following the guide to have a Raspberry hadling all the media downloads at home, let’s continue:&lt;/p&gt;

&lt;h3 id=&quot;bittorrent-client&quot;&gt;BitTorrent client&lt;/h3&gt;

&lt;p&gt;There are several options available for downloading torrents. The one I chose is &lt;a href=&quot;http://deluge-torrent.org/&quot;&gt;Deluge&lt;/a&gt; because of being free, light-weight and ad-free. It also has a “client-server” mode very useful for head-less raspberry and some plugins available that make it very flexible.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://tektab.com/2015/11/10/running-a-always-on-torrent-box-with-raspberry-pi-deluge-on-raspbian/&quot;&gt;installation&lt;/a&gt; is pretty straightforward and after it you will be able to control it from a client you can install on windows/mac/linux. Also a webUI is available. In case your are intesred, here you have some &lt;a href=&quot;http://dev.deluge-torrent.org/wiki/UserGuide/Service/systemd&quot;&gt;useful data&lt;/a&gt; for a more advanced installation. Remember to configure it to download the torrents to the disk we mounted in the &lt;a href=&quot;http://juan.pallares.me/Raspbery-pi-aka-the-247-auto-downloader/&quot;&gt;previous post&lt;/a&gt;, unless you want to run out of space in the pi very fast.&lt;/p&gt;

&lt;h3 id=&quot;tv-shows---sonarr&quot;&gt;TV shows - Sonarr&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../images/sonarr1.PNG&quot; alt=&quot;Sonarr&quot; title=&quot;Sonarr&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sonarr.tv/&quot;&gt;Sonarr&lt;/a&gt; will handle all the TV shows downloads. I’m in love with Sonarr and the moment you start using it you will feel the same. The &lt;a href=&quot;https://www.htpcguides.com/install-sonarr-raspberry-pi-mono-310/&quot;&gt;installation&lt;/a&gt; is a little bit more tricky since it involves Mono. Once you have it running, remember to configure it to use the deluge client you installed before (or any other you chose).&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;Skip the configuration about moving/renaming in Sonarr and CouchPotato. Filebot will handle it&lt;/p&gt;

&lt;p&gt;Also you need to set up some indexers for the content (rarbg in my case at the time of writing). After that is easy, just add the shows you are interested in and the quality you want and they will be downloaded automatically when released, skip the part about moving/renaming for the moment. A calendar will be created:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/sonarr2.PNG&quot; alt=&quot;Sonarr calendar&quot; title=&quot;Sonarr calendar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If it wasn’t enough you can also configure notification in “Connections”. In my case I have pushbullet telling me when a TV show has been grabbed. Later you will see this is not necessary with Filebot.&lt;/p&gt;

&lt;h3 id=&quot;movies---couch-potato&quot;&gt;Movies - Couch Potato&lt;/h3&gt;

&lt;p&gt;My love doesn’t go only to Sonarr, &lt;a href=&quot;https://couchpota.to/&quot;&gt;CouchPotato&lt;/a&gt; is also deep in my heart, I guess I have “software polygamy”. Downloading movies will become very easy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/couchpotato.PNG&quot; alt=&quot;Couch Potato&quot; title=&quot;Couch Potato&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a very easy installation, the configuration is similar to Sonarr, set you downloader (deluge), indexers and were to download the movies. Skip the part about moving/renaming like before. Once configured what CouchPotato will do for you is download the movies you are interested in the moment they are available in a good enough quality (can be configured), add them to your wanted list and go to the cinema only when really necessary. You can also automatically add movies that have more than an 8 in IMDB….boom!&lt;/p&gt;

&lt;h3 id=&quot;moving-and-renaming-media-and-getting-subtitles---filebot&quot;&gt;Moving and renaming media and getting subtitles - Filebot&lt;/h3&gt;

&lt;p&gt;And the last part, we got the movies, the shows but they have strange names, you still need subtitles and the media is placed in a downloads folder….&lt;a href=&quot;http://www.filebot.net/&quot;&gt;Filebot&lt;/a&gt; “the ultimate tv renamer / subtitle downloader” comes to rescue you.&lt;/p&gt;

&lt;p&gt;Ok, it’s true, Sonarr and CouchPotato can do the renaming and moving on their own but what about the subtitles? and what about having a software specialized for that? much better isn’t it?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.filebot.net/forums/viewtopic.php?t=3974&quot;&gt;Installation on the pi&lt;/a&gt; has some difficulty but if I did it you can. Remember to set it up with you OpenSubtitles user.&lt;/p&gt;

&lt;p&gt;After it, I use Filebot with commands, scripts I configured, not the UI. In Deluge you need to install the &lt;a href=&quot;https://www.filebot.net/forums/viewtopic.php?t=3974&quot;&gt;Execute plugin&lt;/a&gt;. This plugin allows you to run a script after downloading a file, and that’s what we will do:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;torrentid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;torrentname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;torrentpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;

/usr/share/filebot/filebot.sh &lt;span class=&quot;nt&quot;&gt;-script&lt;/span&gt; fn:amc &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/media/netdisk/PlexMedia&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--log-file&lt;/span&gt; /home/pi/amc.log &lt;span class=&quot;nt&quot;&gt;--action&lt;/span&gt; move &lt;span class=&quot;nt&quot;&gt;--conflict&lt;/span&gt; override &lt;span class=&quot;nt&quot;&gt;-non-strict&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--def&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;subtitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en,es &lt;span class=&quot;nv&quot;&gt;artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y &lt;span class=&quot;nv&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y &lt;span class=&quot;nv&quot;&gt;reportError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y &lt;span class=&quot;nv&quot;&gt;gmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;esbroma:XXXXXXXXXXX &lt;span class=&quot;nv&quot;&gt;pushbullet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XXXXXXXXXXXX &lt;span class=&quot;s2&quot;&gt;&quot;ut_dir=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$torrentpath&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$torrentname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ut_kind=multi&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ut_title=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$torrentname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Basically, the script.sh is moving the media to the PlexMedia folder, there will create a folder for Movies and other for Tv Shows, inside them a folder per movie/tv show and inside TV shows a folder per season. It will also rename it, grab subtitles (if available) in this case in english and spanish. It will also notify me by email and by pushbullet. As you may have noticed, a log is created to track possible issues.&lt;/p&gt;

&lt;p&gt;Another possible script you can configure is one that looks for subtitles from time to time. It can be necessary because very often you will download media freshly released and the subtitles won’t be available yet.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

/usr/share/filebot/filebot.sh &lt;span class=&quot;nt&quot;&gt;-script&lt;/span&gt; fn:suball &lt;span class=&quot;s2&quot;&gt;&quot;/media/netdisk/PlexMedia&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--log-file&lt;/span&gt; /home/pi/subtitle.log &lt;span class=&quot;nt&quot;&gt;-non-strict&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--def&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxAgeDays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7 &lt;span class=&quot;nv&quot;&gt;subtitles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en,es &lt;span class=&quot;nv&quot;&gt;ignoreTextLanguage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en,es &lt;span class=&quot;nv&quot;&gt;reportError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y &lt;span class=&quot;nv&quot;&gt;pushbullet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;XXXXXXXXXXXX
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In this example, I’m looking for missing subtitles in media that is one week older at most.&lt;/p&gt;

&lt;h3 id=&quot;playing-the-media---plex-on-the-pi&quot;&gt;Playing the media - Plex on the Pi?&lt;/h3&gt;
&lt;p&gt;Ok, now that we have everything, we want to play it, I prefer Plex over Kodi, because of my own needs but feel free to use any player you want, even DLNA would work.&lt;/p&gt;

&lt;p&gt;I tried to &lt;a href=&quot;https://raspberrypi.stackexchange.com/questions/50031/raspberry-pi-3-as-plex-media-server-local-without-transcoding&quot;&gt;use Plex on the raspberri pi&lt;/a&gt;, and did some &lt;a href=&quot;https://www.raspberrypi.org/forums/viewtopic.php?f=35&amp;amp;t=151924&amp;amp;p=999730#p999730&quot;&gt;research&lt;/a&gt; to see if it was possible. But no luck, only with media that is not too high quality. At the end I run Plex on another computer that uses the media on the net disk. Is in this Plex server where I installed SubZero channel, it will help you download subtitles too (yes I hate searching and adding subtitles manually).&lt;/p&gt;

&lt;p&gt;And that’s it regarding auto-downloading media, but I still have a couple things to show you about the Raspberry Pi, you will have to wait for next post though.&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="auto" /><category term="download" /><category term="movies" /><category term="raspberry pi" /><category term="tvshow" /><summary type="html">Series of posts in which I’ll explain how the raspberry downloads automatically all my tv shows and movies, also the subtitle and the media in an unattended ...</summary></entry><entry><title type="html">Raspberry Pi 3 a.k.a the 24/7 auto downloader</title><link href="https://juan.pallares.me/raspberry-pi-autodownloader/" rel="alternate" type="text/html" title="Raspberry Pi 3 a.k.a the 24/7 auto downloader" /><published>2017-03-18T00:00:00+01:00</published><updated>2017-03-18T00:00:00+01:00</updated><id>https://juan.pallares.me/raspberry-pi-autodownloader</id><content type="html" xml:base="https://juan.pallares.me/raspberry-pi-autodownloader/">&lt;h3 id=&quot;why&quot;&gt;Why?&lt;/h3&gt;

&lt;p&gt;I recently bought a Raspberry pi 3, it was improvised I had bought a Pine A64 but it was taking ages to arrive, then the new powerful version of the Pi appeared and I could not resist, Amazon and in couple days at home.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/raspberrypi.jpg&quot; alt=&quot;Raspberry Pi 3&quot; title=&quot;Raspberry Pi 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My plan for it was basically replicating the automatic downloading of torrents (movies and tv shows mainly). I had it in a PC so I had powered on all day. This way I would take advantage of the Pi low consumption. Also I would take the chance to refresh my unix knowledge.&lt;/p&gt;

&lt;p&gt;Ingredientes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Raspberry Pi&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.es/gp/product/B00J2BU7WO/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;SD Card&lt;/a&gt; - 16Gb is more than enough, we will use an external disk for video storage&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.es/gp/product/B00W7S1BFG/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;Case&lt;/a&gt; (optional)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.es/gp/product/B01DDW0P1U/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;Power cable&lt;/a&gt; (optional, you may have a spare one but I wanted a quality one with enough amperage)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;first-steps&quot;&gt;First steps&lt;/h3&gt;

&lt;p&gt;As you already know the Pi works with linux, there are all kind of images available to download but I choose the &lt;a href=&quot;https://www.raspberrypi.org/help/videos/&quot;&gt;recommended one&lt;/a&gt;, Raspbian, looking for flexibility. The installation is very easy but keep in mind you will need a monitor with HDMI connection and a keyboard plugged in the Pi.&lt;/p&gt;

&lt;p&gt;Once you have Raspbian up and running, next thing is to configure the Pi to be able to &lt;a href=&quot;https://www.raspberrypi.org/documentation/remote-access/ssh/windows.md&quot;&gt;work remotely with SHH&lt;/a&gt;, then you can leave it somewhere hidden just connected to the power and the network (I recommend using the ethernet even if the Pi has wifi and the ethernet port is 10/100Mb only, I guess I’m old school)&lt;/p&gt;

&lt;h3 id=&quot;mounting-external-drive&quot;&gt;Mounting external drive&lt;/h3&gt;

&lt;p&gt;For media storage I used a 1TB USB external drive connected to the router, the process is a little bit more complicated than it if you have it directly connected to the Pi, but easy anyway. I followed the steps &lt;a href=&quot;http://raspberrypi.stackexchange.com/questions/40974/access-network-samba-share-from-pi-client&quot;&gt;here&lt;/a&gt;. Basically these commands (for anonymous access):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install  samba-common smbclient samba-common-bin smbclient  cifs-utils
mkdir /mnt/abc
mount -t cifs //server/share /mnt/abc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also configured a cronjob so in every reboot it automonts the network disk&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@reboot sleep 10 &amp;amp;&amp;amp; mount -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rpi-monitor&quot;&gt;RPi-Monitor&lt;/h3&gt;

&lt;p&gt;To close this first post about the Pi, I want to talk about the RPi-Monitor, as the name says it’s a monitor that tells you basic information about the status of the Pi:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/rpi-monitor.png&quot; alt=&quot;RPi-Monitor&quot; title=&quot;RPi-Monitor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s perfect to detect if suddenly the CPU is under heavy load or it’s becoming too hot. It also helps track if you have the latest software installed.&lt;/p&gt;

&lt;h3 id=&quot;this-is-only-the-beginning&quot;&gt;This is only the beginning&lt;/h3&gt;

&lt;p&gt;Next post we will start installing a torrent client, Deluge and software like Couch Potato and Sonarr, you will love it ;)&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="auto" /><category term="download" /><category term="movies" /><category term="raspberry pi" /><category term="tvshow" /><summary type="html">Series of posts in which I’ll explain how the raspberry downloads automatically all my tv shows and movies, also the subtitle and the media in an unattended ...</summary></entry><entry><title type="html">Lean introduction</title><link href="https://juan.pallares.me/lean/" rel="alternate" type="text/html" title="Lean introduction" /><published>2016-07-23T00:00:00+02:00</published><updated>2016-07-23T00:00:00+02:00</updated><id>https://juan.pallares.me/lean</id><content type="html" xml:base="https://juan.pallares.me/lean/">&lt;p&gt;After asisting to a Meetup about Lean, I would like to share the main concepts I learned. Lean is centered on &lt;strong&gt;making obvious what adds value by reducing everything else&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It all started with &lt;strong&gt;Toyota&lt;/strong&gt; in the 1930’s. Due to the crisis they had to focus on quality and avoid over-production unlike the standards at that time (Ford - USA). The first step was using “kaizen”, looking for continuous improvement to reduce all they could the errors in the manufacture process. It later evolved to &lt;a href=&quot;https://en.wikipedia.org/wiki/Toyota_Production_System&quot;&gt;Toyota Production System (TPS)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are 8 types of waste that are pretty self-explanatory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Defects&lt;/li&gt;
  &lt;li&gt;Overproduction&lt;/li&gt;
  &lt;li&gt;Waiting&lt;/li&gt;
  &lt;li&gt;Not utilizing talent&lt;/li&gt;
  &lt;li&gt;Transportation&lt;/li&gt;
  &lt;li&gt;Inventory excess&lt;/li&gt;
  &lt;li&gt;Motion waste&lt;/li&gt;
  &lt;li&gt;Excess processing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Continuous improvement can be separeted in three basic principles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Challenge&lt;/strong&gt;: Having a long term vision of the challenges one needs to face to realize one’s ambition. To do so, we have to &lt;strong&gt;challenge ourselves every day&lt;/strong&gt; to see if we are achieving our goals.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Kaizen&lt;/strong&gt;: Good enough never is, &lt;strong&gt;no process can ever be thought perfect&lt;/strong&gt;, so operations must be improved continuously, striving for innovation and evolution.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Genchi Genbutsu&lt;/strong&gt;: Going to the source to see the facts for oneself and make the right decisions, create consensus, and make sure goals are attained at the best possible speed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lean is also based in the respect for people:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Respect&lt;/li&gt;
  &lt;li&gt;Teamwork&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main concepts of lean can be seen in the “Lean house”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/leanhouse.png&quot; alt=&quot;Lean house&quot; title=&quot;Lean house&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is easy to see the relation of Lean with agile, scrum…but how do they interact? I like this diagram to explain how they are realted. Lean is the origin of everything.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/Lean-Agile-Scrum-XP.gif&quot; alt=&quot;Lean Agile Scrum&quot; title=&quot;Lean Agile Scrum&quot; /&gt; - center&lt;/p&gt;

&lt;p&gt;During the event they showed this video I wanted to share, it shows in a practical and funny way how lean can help:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/wz28yMcDvVM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="lean" /><category term="philosophy" /><category term="manufacturing" /><category term="software" /><category term="development" /><category term="agile" /><category term="scrum" /><summary type="html">After asisting to a Meetup about Lean, I would like to share the main concepts I learned. Lean is centered on making obvious what adds value by reducing everything else.</summary></entry><entry><title type="html">Professional Scrum Master certification</title><link href="https://juan.pallares.me/professional-scrum-master/" rel="alternate" type="text/html" title="Professional Scrum Master certification" /><published>2016-05-08T00:00:00+02:00</published><updated>2016-05-08T00:00:00+02:00</updated><id>https://juan.pallares.me/professional-scrum-master</id><content type="html" xml:base="https://juan.pallares.me/professional-scrum-master/">&lt;p&gt;I recently obtained the Professional Scrum Master certification (PSM I) issued by &lt;a href=&quot;scrum.org&quot;&gt;scrum.org&lt;/a&gt;. In order to do it I had avantage since I received official training but anyway I think is doable without it, some tips:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;There’s no Sprint 0&lt;/strong&gt;. Also no hardening Sprint, integration Sprint, release Sprint, planning Sprint, etc. All Sprints are the same.&lt;/li&gt;
  &lt;li&gt;Only the &lt;strong&gt;Development Team&lt;/strong&gt; are &lt;strong&gt;required&lt;/strong&gt; to participate in the &lt;strong&gt;Daily Scrums&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;There’s always only &lt;strong&gt;one Product Backlog&lt;/strong&gt; and &lt;strong&gt;one Product Owner&lt;/strong&gt;, no matter how many teams are working on the project.&lt;/li&gt;
  &lt;li&gt;There are no roles other than those three standard ones, and &lt;strong&gt;none of them manage the rest&lt;/strong&gt;, development teams self organize.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this input a lot of questions that may appear in the test can be answered much more easily. Apart for the tips, the preparation shoul be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read the &lt;a href=&quot;http://scrumguides.org/scrum-guide.html&quot;&gt;scrum guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Read books such as - Scrum and Xp From the trenches, Kanban &amp;amp; Scrum&lt;/li&gt;
  &lt;li&gt;Work with SCRUM framework in your current employment (if possible)&lt;/li&gt;
  &lt;li&gt;Do Scrum Open assessment several times and takes notes of the erros, don’t stop until you get 100% always&lt;/li&gt;
  &lt;li&gt;Read the &lt;a href=&quot;http://www.agilemanifesto.org/principles.html&quot;&gt;agile manifesto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During the exam, use the bookmarks to mark the questions you have some doubts and go through them in a second iteration (hahaha the scrum way!)&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="scrum master" /><category term="scrum.org" /><category term="agile" /><category term="scrum" /><category term="training" /><category term="certification" /><summary type="html">I recently obtained the Professional Scrum Master certification (PSM I) issued by scrum.org. In order to do it I had avantage since I received official training but anyway I think is doable without it, some tips:</summary></entry><entry><title type="html">Technical debt</title><link href="https://juan.pallares.me/Technical-debt/" rel="alternate" type="text/html" title="Technical debt" /><published>2016-01-04T00:00:00+01:00</published><updated>2016-01-04T00:00:00+01:00</updated><id>https://juan.pallares.me/Technical%20debt</id><content type="html" xml:base="https://juan.pallares.me/Technical-debt/">&lt;h2 id=&quot;the-analogy&quot;&gt;The analogy&lt;/h2&gt;

&lt;p&gt;The term was first used by Ward Cunninham in 1992. He realized financial debt could be compared to technical debt in order to understand easily causes and consequences of it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When in a project software it is decided to skip design decisions is like borrowing money from the bank.&lt;/li&gt;
  &lt;li&gt;How do we pay this credit? When refactoring of this code is done principal is being payed.&lt;/li&gt;
  &lt;li&gt;But all the credits have interest, don’t they? In technical debt after you skipped some design decisions for later the development will be slower, this will mean interest is being payed.&lt;/li&gt;
  &lt;li&gt;We could say that when the whole project is a mess because interest was never payed is similar to when a company goes bankrupt.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../images/TechnicalDebt.png&quot; alt=&quot;Technical debt&quot; title=&quot;Technical debt&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;definition&quot;&gt;Definition&lt;/h2&gt;

&lt;p&gt;When defining it explicitly, not using and analogy, the definition I prefer is the following: &lt;strong&gt;“You may need to use suboptimal designs in the short term, because the schedule does not allow longer term designs to be used”.&lt;/strong&gt;
It is important to clarify that technical debt is only valid when used consciously and when there is a plan to refactor in the future and how you will do it. Another term commonly used is “Design debt”.&lt;/p&gt;

&lt;p&gt;Since I did the &lt;a href=&quot;http://pallares.me/mongodb-for-NET-M101N/&quot;&gt;MongoDB course&lt;/a&gt; I got involved in organizing a Hackaton in the &lt;a href=&quot;http://mean.io/&quot;&gt;MEAN stack&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;example-with-possible-scenarios&quot;&gt;Example with Possible scenarios&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;p&gt;Now let’s make an example. We are a software Company, an start-up. We are just beginning we don’t have much money, but we are lucky some possible customers are coming to see a prototype next week. We would get an initial investment that would help us grow.
Problem? We don’t have enough time to develop the user roles in the application in a proper way, with all the infrastructure.
What could we do? There are 3 possible scenarios:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We decide consciously to develop just two types of users (admin, normal user) enough to see the functionality by the customers and simple enough to develop on time. Let’s say we use 4 story points, and will have to use 22 in the future for the refactor. We get 5 new clients and money from them.&lt;/li&gt;
  &lt;li&gt;Another option is to not skip design and develop the whole infrastructure now, we wouldn’t be on time for the clients, no money would arrive, but the overall effort would be only 21 instead of 4+22.&lt;/li&gt;
  &lt;li&gt;And the last option, we do it “quick” now and forget about refactoring. Very risky decision because if we don’t refactor the debt will grow exponentially and eventually we wouldn’t be able to fix the situation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you may be guessing, the best option is the first one. It’s one of the main reasons of taking debt, to arrive to a deadline but paying it as soon as possible before it gets out of hand.&lt;/p&gt;

&lt;h2 id=&quot;when-to-take-debt---design-payoff-line&quot;&gt;When to take debt - Design payoff line&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;../images/DesignPayoffLine.png&quot; alt=&quot;Design payoff line&quot; title=&quot;Design payoff line&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we saw with the previous example, technical debt is only worth up to a certain point. 
This graph tries to compare delivered functionality versus time in two different projects, one with good design (orange line) and another without design (blue line). The problem with no-design, is that by not putting effort into the design, the code base deteriorates and becomes harder to modify, which lowers the productivity soon after the project grows. Good design keeps its productivity more constant so at some point (the design payoff line) it overtakes the cumulative functionality of the no-design project and will continue to do better.
The million dollar question is, where is the design payoff line? At what time exactly is not worth it anymore? Of course this depends a lot in the project and other variables but maybe a lot sooner than expected, maybe just a few weeks from the start. This is of course an hypothesis, there is no proof, but it’s something many experienced people believes in.&lt;/p&gt;

&lt;h2 id=&quot;what-is-not-technical-debt&quot;&gt;What is not technical debt&lt;/h2&gt;

&lt;p&gt;People can get confused and think that when somebody is writing smelly code is acquiring technical debt, no it isn’t.
Writing bad code is not technical debt, this is important to be clarified. When a development team produces poor quality code does not mean they are acquiring debt. In fact, you can take debt with good quality code, but not designed to grow in the future easily (without design).
If either the managers or the developers are not aware that they are creating technical debt and the implications this will have in the future, then we also can not consider it technical debt.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;To sum up:
Technical debt is a concept that should be known by the technical and the non-technical part of the Company.
Ignoring it can drive projects to failure due to accumulating to much debt and not paying it on time.
It can also help us in some scenarios to deliver a functionality.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://medium.com/@joaomilho/festina-lente-e29070811b84#.r5modcn0r&quot;&gt;https://medium.com/@joaomilho/festina-lente-e29070811b84#.r5modcn0r&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://martinfowler.com/bliki/DesignStaminaHypothesis.html&quot;&gt;http://martinfowler.com/bliki/DesignStaminaHypothesis.html&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="technical debt" /><category term="software" /><category term="development" /><category term="risk" /><summary type="html">You may need to use suboptimal designs in the short term, because the schedule does not allow longer term designs to be used</summary></entry><entry><title type="html">MEAN Hackaton</title><link href="https://juan.pallares.me/MEAN-Hackaton/" rel="alternate" type="text/html" title="MEAN Hackaton" /><published>2015-10-12T00:00:00+02:00</published><updated>2015-10-12T00:00:00+02:00</updated><id>https://juan.pallares.me/MEAN-Hackaton</id><content type="html" xml:base="https://juan.pallares.me/MEAN-Hackaton/">&lt;p&gt;Since I did the &lt;a href=&quot;http://pallares.me/mongodb-for-NET-M101N/&quot;&gt;MongoDB course&lt;/a&gt; I got involved in organizing a Hackaton in the &lt;a href=&quot;http://mean.io/&quot;&gt;MEAN stack&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;what-the-hell-is-mean&quot;&gt;What the hell is MEAN?&lt;/h3&gt;

&lt;p&gt;MEAN is an opinionated fullstack javascript framework which simplifies and accelerates web application development.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; stands for &lt;a href=&quot;https://www.mongodb.org/&quot;&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; stands for &lt;a href=&quot;http://expressjs.com/&quot;&gt;express&lt;/a&gt; - minimal and flexible node.js web application framework&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt; stands for &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular.js&lt;/a&gt; - lets you extend HTML vocabulary for your application. The resulting environment is extraordinarily expressive, readable, and quick to develop.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; stands for &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; - a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you see it covers everything, database, server and web. It let’s you do decent web apps in a short time.&lt;/p&gt;

&lt;h3 id=&quot;hackaton&quot;&gt;Hackaton&lt;/h3&gt;

&lt;p&gt;The people got divided in teams of three and after a brief introduction of the MEAN stack  (20 minutes per technology) they had literally one day and a half to make something cool.&lt;/p&gt;

&lt;p&gt;People got really engaged and didn’t even want to make breaks. We, the MEAN “experts”, were giving support to the teams during all the coding and gave an example application of a library so they could get the basic structure to start.&lt;/p&gt;

&lt;p&gt;We were really surprised by the results and the winning team made a really interesting app. It was difficult to believe they did it in such a short period of time.&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="MEAN" /><category term="hackaton" /><category term="mongodb" /><category term="angular.js" /><category term="express" /><category term="node.js" /><summary type="html">Since I did the MongoDB course I got involved in organizing a Hackaton in the MEAN stack.</summary></entry><entry><title type="html">M101N MongoDB for .NET</title><link href="https://juan.pallares.me/mongodb-for-NET-M101N/" rel="alternate" type="text/html" title="M101N MongoDB for .NET" /><published>2015-05-17T00:00:00+02:00</published><updated>2015-05-17T00:00:00+02:00</updated><id>https://juan.pallares.me/mongodb-for-NET-M101N</id><content type="html" xml:base="https://juan.pallares.me/mongodb-for-NET-M101N/">&lt;p&gt;I just finished the online course &lt;a href=&quot;https://university.mongodb.com/courses/M101N/about&quot;&gt;M101N MongoDB for .NET&lt;/a&gt; and I really enjoyed it. They combine short videos and a quiz after them checking you understood the explanation. There is also homework every week and a final exam.
I recommend it to every developer who wants to get to know this famous &lt;a href=&quot;http://www.mongodb.com/nosql-explained&quot;&gt;NoSQL&lt;/a&gt; database.&lt;/p&gt;

&lt;p&gt;There are also &lt;a href=&quot;https://university.mongodb.com/courses/catalog&quot;&gt;another possible courses&lt;/a&gt; such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MongoDB for Java developers&lt;/li&gt;
  &lt;li&gt;MongoDB for Node.js developers&lt;/li&gt;
  &lt;li&gt;MongoDB for DBAs&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Querying in MongoDB is with &lt;em&gt;JavaScript&lt;/em&gt; and it takes some time to set your mind to use it instead of SQL. I’ll leave your with some SQL statements and the equivalent in MongoDB:&lt;/p&gt;

&lt;h3 id=&quot;simple-query&quot;&gt;Simple query&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;filter&quot;&gt;Filter&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;$gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;$lte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;filter-and-order&quot;&gt;Filter and order&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;A&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="mongo" /><category term=".NET" /><category term="mongodb" /><category term="course" /><category term="certification" /><summary type="html">I just finished the online course M101N MongoDB for .NET and I really enjoyed it. They combine short videos and a quiz after them checking you understood the explanation. There is also homework every week and a final exam. I recommend it to every developer who wants to get to know this famous NoSQL database.</summary></entry><entry><title type="html">Explaining SOLID principles with C# examples</title><link href="https://juan.pallares.me/Explaining-SOLID-principles-with-C-examples/" rel="alternate" type="text/html" title="Explaining SOLID principles with C# examples" /><published>2015-03-15T00:00:00+01:00</published><updated>2015-03-15T00:00:00+01:00</updated><id>https://juan.pallares.me/Explaining-SOLID-principles-with-C#-examples</id><content type="html" xml:base="https://juan.pallares.me/Explaining-SOLID-principles-with-C-examples/">&lt;h3 id=&quot;what-is-solid&quot;&gt;What is SOLID?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt; are five basic principles for object-oriented programming and design. If applied, the solution is more likely to be easy to maintain and extend over time, which helps to create good software architecture. The SOLID acronym stands for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt; - Single responsibility principle&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;O&lt;/strong&gt; - Open closed principle&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; - Liskov substitution principle&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; - Interface segregation principle&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt; - Dependency inversion principle&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;single-responsability-principle-srp&quot;&gt;Single responsability principle (SRP)&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Starter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Battery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//we would put code here to handle the logic for checking&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//whether or not the batter is charged&lt;/span&gt;
 
        &lt;span class=&quot;c1&quot;&gt;//then we check the result of our logic&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsCharged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//we could put logic here to handle&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//the actual ignition process&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//uh oh! the battery is not charged&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//Failure!&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What is wrong with the above code? Should we really have all the battery logic inside the start method? and the ignition process? No, we shouldn’t, it has multiple responsability.&lt;/p&gt;

&lt;p&gt;Single responsabolity principle says that &lt;strong&gt;a class should only have one responsability&lt;/strong&gt;. So the solution is moving the logic to the Starter and Battery classes and let the start method just start the engine.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Starter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Battery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Starter&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Battery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//since the Battery class now contains that actual charge validation&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//logic, the Starter merely checks the value of that property&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//and the Battery takes care of the rest&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsCharged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//we can put the ignition logic here&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;open-closed-principle-ocp&quot;&gt;Open-closed principle (OCP)&lt;/h3&gt;

&lt;p&gt;Following the same approach let’s see what’s wrong with this code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustType&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If in the future we want to add more customer types, we will need to modify the class adding more ifs. This class should be &lt;strong&gt;closed for modification open for extension&lt;/strong&gt;. We fix the code crating a derived class SilverCustomer that will override the discount method. And when we get another Customer type? another derived class!:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SilverCustomer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Customer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;liskov-substitution-principle-lsp&quot;&gt;Liskov substitution principle (LSP)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Derived classes should be perfectly substitutable for their base classes&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SolidDemo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apple&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Orange&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the above code an Orange cannot replace an Apple so the code doesn’t follow the Liskov principle. How can we fix it? Creating a generic base class for both fruits.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SolidDemo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Fruit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fruit&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fruit&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Orange&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;interface-segregation-principle-isp&quot;&gt;Interface segregation principle (ISP)&lt;/h3&gt;

&lt;p&gt;The goal behind ISP is that &lt;strong&gt;no client consuming an interface should be forced to depend on methods it does not use&lt;/strong&gt;. For example, you might have a class that implements an interface called IPersist.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookingLog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// saving code.&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// log code&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// notifying code&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now if we update IPersist to include the two new methods we have in ReservationLog class, it might be useful for more implementations of IPersist.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Well…that was a mistake, now we are forcing all the classes that implement IPersist to implement methods they are not using. We are clearly breaking the interface segregation principle. In fact, IPersist is not just persisting (saving) now is also logging.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookingDatabase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// code to save on database&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NotImplementedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReservationDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NotImplementedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To fix it is really easy, we need a new interface to separate responsabilities. And then only the classes that need to log will implement the new interface.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ILog&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReservationDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReservationDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReservationLog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILog&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;dependency-inversion-principle-dip&quot;&gt;Dependency inversion principle (DIP)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Abstractions should not depend upon details. Details should depend upon abstractions.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we follow the Dependency inversion principle we will be able to build loosely coupled classes.&lt;/p&gt;

&lt;p&gt;Let’s see an example that violates the principle:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProductService&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProductDiscount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProductRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProductService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_productDiscount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProductDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProductRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetProducts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AdjustPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice high level modules call low level modules and instantiate their dependencies as they need them. Here ProductService calls ProductRepository, but before startintg it needs to create a new one up using the ‘new’ keyword. &lt;strong&gt;Two dependencies are created in the constructor with the ‘new’ keyword. This breaks the Single Responsibility Principle as the class is forced to carry out work that’s not really its concern.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The ProductService is thus tightly coupled to those two concrete classes. Obtaining the correct pricing and data store strategy should not be the responsibility of the ProductService. And whenever those strategies change you must update the ProductService class. It is also difficult to test ProductService in isolation.&lt;/p&gt;

&lt;p&gt;In order to remove the hard dependency we will inject in the constructor new abstractions that we will create for the discount and for the repository.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProductService&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IProductRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProductService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IProductRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetProducts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IProductDiscountStrategy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AdjustPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now anyone using Product Service will know they need an implementation of IProductRepository and IProductStrategy, but not an specific one.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I hope the examples I picked were good enough to understand the SOLID principles. This was just an introduction, there is &lt;a href=&quot;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&quot;&gt;much more detail available&lt;/a&gt;.&lt;/p&gt;</content><author><name>Juan Pallarès</name><email>juan@pallares.me</email></author><category term="SOLID" /><category term="C#" /><category term="code" /><category term="examples" /><summary type="html">SOLID are five basic principles for object-oriented programming and design. If applied, the solution is more likely to be easy to maintain and extend over time</summary></entry></feed>