<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Juan Pallarès Garbí</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://juan.pallares.me/feed.xml" />
<link rel="alternate" type="text/html" href="http://juan.pallares.me" />
<updated>2016-05-08T15:53:48+02:00</updated>
<id>http://juan.pallares.me/</id>
<author>
  <name>Juan Pallarès</name>
  <uri>http://juan.pallares.me/</uri>
  <email>juan@pallares.me</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Professional Scrum Master certification]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/professional-scrum-master/" />
  <id>http://juan.pallares.me/professional-scrum-master</id>
  <published>2016-05-08T00:00:00+02:00</published>
  <updated>2016-05-08T00:00:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;I recently obtained the Professional Scrum Master certification (PSM I) issued by &lt;a href=&quot;scrum.org&quot;&gt;scrum.org&lt;/a&gt;. In order to do it I had avantage since I received official training but anyway I think is doable without it, some tips:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;There’s no Sprint 0&lt;/strong&gt;. Also no hardening Sprint, integration Sprint, release Sprint, planning Sprint, etc. All Sprints are the same.&lt;/li&gt;
  &lt;li&gt;Only the &lt;strong&gt;Development Team&lt;/strong&gt; are &lt;strong&gt;required&lt;/strong&gt; to participate in the &lt;strong&gt;Daily Scrums&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;There’s always only &lt;strong&gt;one Product Backlog&lt;/strong&gt; and &lt;strong&gt;one Product Owner&lt;/strong&gt;, no matter how many teams are working on the project.&lt;/li&gt;
  &lt;li&gt;There are no roles other than those three standard ones, and &lt;strong&gt;none of them manage the rest&lt;/strong&gt;, development teams self organize.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this input a lot of questions that may appear in the test can be answered much more easily. Apart for the tips, the preparation shoul be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read the &lt;a href=&quot;http://scrumguides.org/scrum-guide.html&quot;&gt;scrum guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Read books such as - Scrum and Xp From the trenches, Kanban &amp;amp; Scrum&lt;/li&gt;
  &lt;li&gt;Work with SCRUM framework in your current employment (if possible)&lt;/li&gt;
  &lt;li&gt;Do Scrum Open assessment several times and takes notes of the erros, don’t stop until you get 100% always&lt;/li&gt;
  &lt;li&gt;Read the &lt;a href=&quot;http://www.agilemanifesto.org/principles.html&quot;&gt;agile manifesto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During the exam, use the bookmarks to mark the questions you have some doubts and go through them in a second iteration (hahaha the scrum way!)&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/professional-scrum-master/&quot;&gt;Professional Scrum Master certification&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on May 08, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Technical debt]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/Technical%20debt/" />
  <id>http://juan.pallares.me/Technical debt</id>
  <published>2016-01-04T00:00:00+01:00</published>
  <updated>2016-01-04T00:00:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;h4 id=&quot;the-analogy&quot;&gt;The analogy&lt;/h4&gt;
&lt;p&gt;The term was first used by Ward Cunninham in 1992. He realized financial debt could be compared to technical debt in order to understand easily causes and consequences of it. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When in a project software it is decided to skip design decisions is like borrowing money from the bank.&lt;/li&gt;
  &lt;li&gt;How do we pay this credit? When refactoring of this code is done principal is being payed.&lt;/li&gt;
  &lt;li&gt;But all the credits have interest, don’t they? In technical debt after you skipped some design decisions for later the development will be slower, this will mean interest is being payed.&lt;/li&gt;
  &lt;li&gt;We could say that when the whole project is a mess because interest was never payed is similar to when a company goes bankrupt.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../images/TechnicalDebt.png&quot; alt=&quot;Technical debt&quot; title=&quot;Technical debt&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;definition&quot;&gt;Definition&lt;/h4&gt;
&lt;p&gt;When defining it explicitly, not using and analogy, the definition I prefer is the following: &lt;strong&gt;“You may need to use suboptimal designs in the short term, because the schedule does not allow longer term designs to be used”.&lt;/strong&gt;
It is important to clarify that technical debt is only valid when used consciously and when there is a plan to refactor in the future and how you will do it. Another term commonly used is “Design debt”.&lt;/p&gt;

&lt;p&gt;Since I did the &lt;a href=&quot;http://pallares.me/mongodb-for-NET-M101N/&quot;&gt;MongoDB course&lt;/a&gt; I got involved in organizing a Hackaton in the &lt;a href=&quot;http://mean.io/&quot;&gt;MEAN stack&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;example-with-possible-scenarios1&quot;&gt;Example with Possible scenarios&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h4&gt;
&lt;p&gt;Now let’s make an example. We are a software Company, an start-up. We are just beginning we don’t have much money, but we are lucky some possible customers are coming to see a prototype next week. We would get an initial investment that would help us grow.
Problem? We don’t have enough time to develop the user roles in the application in a proper way, with all the infrastructure.
What could we do? There are 3 possible scenarios:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We decide consciously to develop just two types of users (admin, normal user) enough to see the functionality by the customers and simple enough to develop on time. Let’s say we use 4 story points, and will have to use 22 in the future for the refactor. We get 5 new clients and money from them.&lt;/li&gt;
  &lt;li&gt;Another option is to not skip design and develop the whole infrastructure now, we wouldn’t be on time for the clients, no money would arrive, but the overall effort would be only 21 instead of 4+22.&lt;/li&gt;
  &lt;li&gt;And the last option, we do it “quick” now and forget about refactoring. Very risky decision because if we don’t refactor the debt will grow exponentially and eventually we wouldn’t be able to fix the situation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you may be guessing, the best option is the first one. It’s one of the main reasons of taking debt, to arrive to a deadline but paying it as soon as possible before it gets out of hand.&lt;/p&gt;

&lt;h4 id=&quot;when-to-take-debt---design-payoff-line2&quot;&gt;When to take debt - Design payoff line&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;../images/DesignPayoffLine.png&quot; alt=&quot;Design payoff line&quot; title=&quot;Design payoff line&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we saw with the previous example, technical debt is only worth up to a certain point. 
This graph tries to compare delivered functionality versus time in two different projects, one with good design (orange line) and another without design (blue line). The problem with no-design, is that by not putting effort into the design, the code base deteriorates and becomes harder to modify, which lowers the productivity soon after the project grows. Good design keeps its productivity more constant so at some point (the design payoff line) it overtakes the cumulative functionality of the no-design project and will continue to do better.
The million dollar question is, where is the design payoff line? At what time exactly is not worth it anymore? Of course this depends a lot in the project and other variables but maybe a lot sooner than expected, maybe just a few weeks from the start. This is of course an hypothesis, there is no proof, but it’s something many experienced people believes in.&lt;/p&gt;

&lt;h4 id=&quot;what-is-not-technical-debt&quot;&gt;What is not technical debt&lt;/h4&gt;
&lt;p&gt;People can get confused and think that when somebody is writing smelly code is acquiring technical debt, no it isn’t.
Writing bad code is not technical debt, this is important to be clarified. When a development team produces poor quality code does not mean they are acquiring debt. In fact, you can take debt with good quality code, but not designed to grow in the future easily (without design).
If either the managers or the developers are not aware that they are creating technical debt and the implications this will have in the future, then we also can not consider it technical debt.&lt;/p&gt;

&lt;h4 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h4&gt;
&lt;p&gt;To sum up:
Technical debt is a concept that should be known by the technical and the non-technical part of the Company.
Ignoring it can drive projects to failure due to accumulating to much debt and not paying it on time.
It can also help us in some scenarios to deliver a functionality.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://medium.com/@joaomilho/festina-lente-e29070811b84#.r5modcn0r&quot;&gt;https://medium.com/@joaomilho/festina-lente-e29070811b84#.r5modcn0r&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://martinfowler.com/bliki/DesignStaminaHypothesis.html&quot;&gt;http://martinfowler.com/bliki/DesignStaminaHypothesis.html&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/Technical%20debt/&quot;&gt;Technical debt&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on January 04, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[MEAN Hackaton]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/MEAN-Hackaton/" />
  <id>http://juan.pallares.me/MEAN-Hackaton</id>
  <published>2015-10-12T00:00:00+02:00</published>
  <updated>2015-10-12T00:00:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;Since I did the &lt;a href=&quot;http://pallares.me/mongodb-for-NET-M101N/&quot;&gt;MongoDB course&lt;/a&gt; I got involved in organizing a Hackaton in the &lt;a href=&quot;http://mean.io/&quot;&gt;MEAN stack&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;what-the-hell-is-mean&quot;&gt;What the hell is MEAN?&lt;/h4&gt;

&lt;p&gt;MEAN is an opinionated fullstack javascript framework which simplifies and accelerates web application development.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; stands for &lt;a href=&quot;https://www.mongodb.org/&quot;&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; stands for &lt;a href=&quot;http://expressjs.com/&quot;&gt;express&lt;/a&gt; - minimal and flexible node.js web application framework&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt; stands for &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular.js&lt;/a&gt; - lets you extend HTML vocabulary for your application. The resulting environment is extraordinarily expressive, readable, and quick to develop.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; stands for &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; - a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you see it covers everything, database, server and web. It let’s you do decent web apps in a short time.&lt;/p&gt;

&lt;h4 id=&quot;hackaton&quot;&gt;Hackaton&lt;/h4&gt;

&lt;p&gt;The people got divided in teams of three and after a brief introduction of the MEAN stack  (20 minutes per technology) they had literally one day and a half to make something cool. &lt;/p&gt;

&lt;p&gt;People got really engaged and didn’t even want to make breaks. We, the MEAN “experts”, were giving support to the teams during all the coding and gave an example application of a library so they could get the basic structure to start.&lt;/p&gt;

&lt;p&gt;We were really surprised by the results and the winning team made a really interesting app. It was difficult to believe they did it in such a short period of time.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/MEAN-Hackaton/&quot;&gt;MEAN Hackaton&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on October 12, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[M101N MongoDB for .NET]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/mongodb-for-NET-M101N/" />
  <id>http://juan.pallares.me/mongodb-for-NET-M101N</id>
  <published>2015-05-17T00:00:00+02:00</published>
  <updated>2015-05-17T00:00:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;I just finished the online course &lt;a href=&quot;https://university.mongodb.com/courses/M101N/about&quot;&gt;M101N MongoDB for .NET&lt;/a&gt; and I really enjoyed it. They combine short videos and a quiz after them checking you understood the explanation. There is also homework every week and a final exam.
I recommend it to every developer who wants to get to know this famous &lt;a href=&quot;http://www.mongodb.com/nosql-explained&quot;&gt;NoSQL&lt;/a&gt; database.&lt;/p&gt;

&lt;p&gt;There are also &lt;a href=&quot;https://university.mongodb.com/courses/catalog&quot;&gt;another possible courses&lt;/a&gt; such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MongoDB for Java developers&lt;/li&gt;
  &lt;li&gt;MongoDB for Node.js developers&lt;/li&gt;
  &lt;li&gt;MongoDB for DBAs&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Querying in MongoDB is with &lt;em&gt;JavaScript&lt;/em&gt; and it takes some time to set your mind to use it instead of SQL. I’ll leave your with some SQL statements and the equivalent in MongoDB:&lt;/p&gt;

&lt;h4 id=&quot;simple-query&quot;&gt;Simple query&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;filter&quot;&gt;Filter&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$gt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$lte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;filter-and-order&quot;&gt;Filter and order&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/mongodb-for-NET-M101N/&quot;&gt;M101N MongoDB for .NET&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on May 17, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Explaining SOLID principles with C# examples]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/explaining-SOLID-principles-with-C%23-examples/" />
  <id>http://juan.pallares.me/explaining-SOLID-principles-with-C#-examples</id>
  <published>2015-03-15T00:00:00+01:00</published>
  <updated>2015-03-15T00:00:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;h3 id=&quot;what-is-solid&quot;&gt;What is SOLID?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt; are five basic principles for object-oriented programming and design. If applied, the solution is more likely to be easy to maintain and extend over time, which helps to create good software architecture. The SOLID acronym stands for:  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt; - Single responsibility principle  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;O&lt;/strong&gt; - Open closed principle  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; - Liskov substitution principle  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; - Interface segregation principle  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt; - Dependency inversion principle&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;single-responsability-principle-srp&quot;&gt;Single responsability principle (SRP)&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Starter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Battery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//we would put code here to handle the logic for checking&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//whether or not the batter is charged&lt;/span&gt;
 
        &lt;span class=&quot;c1&quot;&gt;//then we check the result of our logic&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsCharged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//we could put logic here to handle&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//the actual ignition process&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//uh oh! the battery is not charged&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//Failure!&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What is wrong with the above code? Should we really have all the battery logic inside the start method? and the ignition process? No, we shouldn’t, it has multiple responsability.&lt;/p&gt;

&lt;p&gt;Single responsabolity principle says that &lt;strong&gt;a class should only have one responsability&lt;/strong&gt;. So the solution is moving the logic to the Starter and Battery classes and let the start method just start the engine.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Starter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Battery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Starter&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Battery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//since the Battery class now contains that actual charge validation&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//logic, the Starter merely checks the value of that property&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//and the Battery takes care of the rest&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;battery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsCharged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//we can put the ignition logic here&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IgnitionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;open-closed-principle-ocp&quot;&gt;Open-closed principle (OCP)&lt;/h3&gt;

&lt;p&gt;Following the same approach let’s see what’s wrong with this code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustType&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_CustType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If in the future we want to add more customer types, we will need to modify the class adding more ifs. This class should be &lt;strong&gt;closed for modification open for extension&lt;/strong&gt;. We fix the code crating a derived class SilverCustomer that will override the discount method. And when we get another Customer type? another derived class!:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SilverCustomer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Customer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TotalSales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;liskov-substitution-principle-lsp&quot;&gt;Liskov substitution principle (LSP)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Derived classes should be perfectly substitutable for their base classes&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SolidDemo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apple&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Red&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Orange&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the above code an Orange cannot replace an Apple so the code doesn’t follow the Liskov principle. How can we fix it? Creating a generic base class for both fruits.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SolidDemo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Fruit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fruit&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Apple&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fruit&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Red&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Orange&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apple&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Orange&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;interface-segregation-principle-isp&quot;&gt;Interface segregation principle (ISP)&lt;/h3&gt;

&lt;p&gt;The goal behind ISP is that &lt;strong&gt;no client consuming an interface should be forced to depend on methods it does not use&lt;/strong&gt;. For example, you might have a class that implements an interface called IPersist.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookingLog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// saving code.&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// log code&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// notifying code&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if we update IPersist to include the two new methods we have in ReservationLog class, it might be useful for more implementations of IPersist.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Well…that was a mistake, now we are forcing all the classes that implement IPersist to implement methods they are not using. We are clearly breaking the interface segregation principle. In fact, IPersist is not just persisting (saving) now is also logging.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookingDatabase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;c1&quot;&gt;// code to save on database&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BookingDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NotImplementedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReservationDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;NotImplementedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To fix it is really easy, we need a new interface to separate responsabilities. And then only the classes that need to log will implement the new interface.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILog&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReservationDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SendLogNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReservationDetails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReservationLog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPersist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILog&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;dependency-inversion-principle-dip&quot;&gt;Dependency inversion principle (DIP)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Abstractions should not depend upon details. Details should depend upon abstractions.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we follow the Dependency inversion principle we will be able to build loosely coupled classes.&lt;/p&gt;

&lt;p&gt;Let’s see an example that violates the principle:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProductService&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProductDiscount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProductRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProductService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_productDiscount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProductDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProductRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetProducts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AdjustPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice high level modules call low level modules and instantiate their dependencies as they need them. Here ProductService calls ProductRepository, but before startintg it needs to create a new one up using the ‘new’ keyword. &lt;strong&gt;Two dependencies are created in the constructor with the ‘new’ keyword. This breaks the Single Responsibility Principle as the class is forced to carry out work that’s not really its concern.&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;The ProductService is thus tightly coupled to those two concrete classes. Obtaining the correct pricing and data store strategy should not be the responsibility of the ProductService. And whenever those strategies change you must update the ProductService class. It is also difficult to test ProductService in isolation.&lt;/p&gt;

&lt;p&gt;In order to remove the hard dependency we will inject in the constructor new abstractions that we will create for the discount and for the repository.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProductService&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IProductRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProductService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IProductRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetProducts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IProductDiscountStrategy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_productRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AdjustPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;productDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;productsFromDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now anyone using Product Service will know they need an implementation of IProductRepository and IProductStrategy, but not an specific one.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I hope the examples I picked were good enough to understand the SOLID principles. This was just an introduction, there is &lt;a href=&quot;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&quot;&gt;much more detail available&lt;/a&gt;.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/explaining-SOLID-principles-with-C%23-examples/&quot;&gt;Explaining SOLID principles with C# examples&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on March 15, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Some thoughts about pair programming]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/pair-programming/" />
  <id>http://juan.pallares.me/pair-programming</id>
  <published>2015-02-22T00:00:00+01:00</published>
  <updated>2015-02-22T00:00:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;After pair programming pretty often for the last months this is what I think about it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Pair programming improves &lt;strong&gt;code quality&lt;/strong&gt;. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pair programming improves &lt;strong&gt;team focus&lt;/strong&gt; (for example when the guy behind you says “hey is that stuff really necessary for this sprint?”). &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Surprisingly many developers that are strongly against pair programming actually haven’t tried it, and quickly learn to like it once they do try it. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pair programming is exhaustive and should not be done all day.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pair programming should be done in complex stories  only(related with the previous). &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Shifting pairs&lt;/strong&gt; frequently is good.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pair programming does improve &lt;strong&gt;knowledge spread&lt;/strong&gt; within the group (Related with the previous too).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some people just aren’t comfortable with pair programming. Don’t throw out an excellent programmer just because he isn’t comfortable with pair programming. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Code review is an OK alternative&lt;/strong&gt; to pair programming.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It’s useful that the “navigator” (the guy not using the keyboard) has a computer of his own as well. Not for development, but for doing little spikes when necessary, browsing documentation when the “driver” (the guy at the keyboard) gets stuck, etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice&quot;&gt;Please try it before criticizing, I was also reluctant at first. I thought it would be a waste of time until I realized all the advantages.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/pair-programming/&quot;&gt;Some thoughts about pair programming&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on February 22, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[C# in depth by Jon Skeet]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/C%23-in-depth-jon-skeet/" />
  <id>http://juan.pallares.me/C#-in-depth-jon-skeet</id>
  <published>2015-01-18T00:00:00+01:00</published>
  <updated>2015-01-18T00:00:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;I just finished reading &lt;a href=&quot;http://www.amazon.com/Depth-3rd-Edition-Jon-Skeet/dp/161729134X&quot;&gt;C# in depth by Jon Skeet&lt;/a&gt;, the book covers the evolution from the first version of C# until C# 5 (at least the edition I read). Explaining in detail all the new features that have been added during time.&lt;/p&gt;

&lt;p&gt;The book is divided in 5 parts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;C# 1 core foundations&lt;/strong&gt; This is an introduction to the book - experienced developers could skip it completely if they really wanted to&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C# 2 new features&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Generics&lt;/li&gt;
      &lt;li&gt;Nullable types&lt;/li&gt;
      &lt;li&gt;Anonymous methods in delegates&lt;/li&gt;
      &lt;li&gt;Yield statement&lt;/li&gt;
      &lt;li&gt;Minor features like partial types, stacic classes, separate getter/setter property access, namespace aliases, exposiing internals to selected assemblies…  &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C# 3 LINQ&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Features contributing LINQ (automatically implemented properties, implicit typing of local variables, simplified initialization, implicity typed arrays and anonymous types)&lt;/li&gt;
      &lt;li&gt;Lambda expressions and expression trees&lt;/li&gt;
      &lt;li&gt;Extension methodds&lt;/li&gt;
      &lt;li&gt;Query expressions and LINQ to objects&lt;/li&gt;
      &lt;li&gt;LINQ beyond collections  &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C# 4 Dynamic typing&lt;/strong&gt; and minor changes
    &lt;ul&gt;
      &lt;li&gt;Optional parameters, generic variance…&lt;/li&gt;
      &lt;li&gt;Dynamic binding in static language  &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C# 5 Asynchrony with async/await&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;notice&quot;&gt;I recommend this book to all the C# experienced developers who want to improve his knowledge about they language they use daily.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/C%23-in-depth-jon-skeet/&quot;&gt;C# in depth by Jon Skeet&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on January 18, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Using Jekyll on Windows]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/jekyll-windows/" />
  <id>http://juan.pallares.me/jekyll-windows</id>
  <updated>2014-12-30T00:00:00-00:00</updated>
  <published>2014-12-30T00:00:00+01:00</published>
  
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;I have a Macbook Air and a desktop PC. As a .NET developer I expend more “productive” time on the PC, even if I have a windows partition installed on the Macbook. I started using Jekyll on the MacOS since it was the easy, standard way, but I like flexibility and started looking for how to use it from Windows, I wanted to create new posts from my PC basically.&lt;/p&gt;

&lt;p&gt;Following the steps on 
&lt;a href=&quot;http://jekyll-windows.juthilo.com/&quot;&gt;Run Jekyll on Windows&lt;/a&gt; I didn’t find any issues. 
The steps are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install Ruby&lt;/li&gt;
  &lt;li&gt;Instal Ruby DevKit&lt;/li&gt;
  &lt;li&gt;Install Jekyll gem&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are using the same theme as me (Minimal Mistakes), there are &lt;a href=&quot;https://mademistakes.com/articles/minimal-mistakes-jekyll-theme/#installation&quot;&gt;some specific commands&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Don’t forget to install &lt;a href=&quot;https://www.python.org/downloads/release/python-278/&quot;&gt;Python 2.7.8&lt;/a&gt; if you still don¡t have it and remember to add “python” to the system path , the installer can make it for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy windows lovers!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/jekyll-windows/&quot;&gt;Using Jekyll on Windows&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on December 30, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Resharper favourite hotkeys]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/resharper-favourite-hotkeys/" />
  <id>http://juan.pallares.me/resharper-favourite-hotkeys</id>
  <published>2014-11-16T00:00:00+01:00</published>
  <updated>2014-11-16T00:00:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;When coding in C# with Visual Studio usually you get enough help with Intellisense and &lt;a href=&quot;http://visualstudioshortcuts.com/&quot;&gt;Visual Studio shortcuts&lt;/a&gt;, which there are plenty:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;../images/VisualStudioShortcuts.png&quot; alt=&quot;Visual Studio Shortcuts&quot; title=&quot;Visual Studio Shortcuts&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anyway, it’s very common to see developers using extra tools as &lt;a href=&quot;https://www.jetbrains.com/resharper&quot;&gt;Resharper&lt;/a&gt;. I’ll copy paste the definition from their website:&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;ReSharper is a renowned productivity tool that makes Microsoft Visual Studio a much better IDE. Thousands of .NET developers worldwide wonder how they’ve ever lived without ReSharper’s code inspections, automated code refactorings, blazing fast navigation, and coding assistance.&lt;/p&gt;

&lt;p&gt;I have used it in several projects, but in the last one it is compulsory and it’s when I have seen it’s true power. I’m going to go through my favourite shortcuts and tricks from Resharper, it’s important to notice I use the “Visual Studio scheme” but there is also option for the “IntelliJ scheme”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;../images/Resharper8Keymap.png&quot; alt=&quot;Resharper 8 Keymap&quot; title=&quot;Resharper 8 Keymap&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OK, enough introductions, what are my favourite shortcuts? here you go:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Alt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Enter&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For everything, all the time Resharper will suggest actions in how to improve the code and with this shortcut you can go throught them. At the beginning simple things like an if else clause that can be converted to ?:, but you can also put a new paremeter in the constructor and “alt enter” it will suggest to create the field and initialize it inside the constructor, lovely.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;T&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Go to everything, and you can use wildcards or initials.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;R&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Renaming, can include comments.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;M&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Extract a method from the selected piece of code which takes me to the next shortcut:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Alt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Right&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Alt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Left&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Expand and shrink selection.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;View recent files and recent edits. And finally &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Ctrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;V&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Will show you a window with all your history in the clipboard, very useful when copypasting some code.
What are your favourite ones?&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/resharper-favourite-hotkeys/&quot;&gt;Resharper favourite hotkeys&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on November 16, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Markdown syntax introduction]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/markdown-syntax/" />
  <id>http://juan.pallares.me/markdown-syntax</id>
  <updated>2014-26-10T00:00:00-00:00</updated>
  <published>2014-10-26T00:00:00+02:00</published>
  
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;h3 id=&quot;what-is-it&quot;&gt;What is it?&lt;/h3&gt;

&lt;p&gt;Markdown is a &lt;strong&gt;plain text formatting syntax designed so that it optionally can be converted to HTML using a tool by the same name&lt;/strong&gt;. Markdown is popularly used to format readme files, for writing messages in online discussion forums or in text editors for the quick creation of rich text documents.&lt;/p&gt;

&lt;p&gt;Thus, “Markdown” is two things: (1) a plain text formatting syntax; and (2) a software tool, written in Perl, that converts the plain text formatting to HTML. 
The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters — including Setext, atx, Textile, reStructuredText, Grutatext, and EtText, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email.Markdown’s syntax is intended for one purpose: to be used as a format for writing for the web.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;Markdown is not a replacement for HTML&lt;/strong&gt;, or even close to it. Its syntax is very small, corresponding only to a very small subset of HTML tags. The idea is not to create a syntax that makes it easier to insert HTML tags. The idea for Markdown is to make it easy to read, write, and edit prose. HTML is a publishing format; Markdown is a writing format. Thus, Markdown’s formatting syntax only addresses issues that can be conveyed in plain text.&lt;/p&gt;

&lt;h3 id=&quot;iniline-html&quot;&gt;Iniline HTML&lt;/h3&gt;

&lt;p&gt;For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.
The only restrictions are that block-level HTML elements — e.g.&lt;code&gt; &amp;lt;div&amp;gt;,&amp;lt;table&amp;gt;, &amp;lt;pre&amp;gt;, &amp;lt;p&amp;gt;&lt;/code&gt;, etc. — must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces. Markdown is smart enough not to add extra (unwanted) &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.&lt;/p&gt;

&lt;h3 id=&quot;some-history&quot;&gt;Some history&lt;/h3&gt;

&lt;p&gt;The Markdown language was created in 2004 by John Gruber with substantial contributions from Aaron Swartz, with the goal of allowing people “to write using an easy-to-read, easy-to-write plain text format, and optionally convert it to structurally valid XHTML (or HTML)”. Gruber wrote a Perl script, Markdown.pl, which converts marked-up text input to valid, well-formed XHTML or HTML. Markdown has since been re-implemented by others as a Perl module available on CPAN (Text::Markdown), and in a variety of other programming languages. It is distributed under a BSD-style license and is included with, or available as a plugin for, several content-management systems.
Sites such as GitHub, reddit, Diaspora, Stack Exchange, OpenStreetMap, and SourceForge use variants of Markdown to facilitate discussion between users.&lt;/p&gt;

&lt;h3 id=&quot;editors&quot;&gt;Editors&lt;/h3&gt;

&lt;p&gt;While Markdown is a minimal markup language and is easily read and edited with a normal text editor, there are specially designed editors that preview the files with styles. There are a variety of such editors available for all major platforms; one such graphical editor for Windows is &lt;a href=&quot;http://markdownpad.com/&quot;&gt;MarkdownPad&lt;/a&gt;. There are syntax highlighting plugins for Markdown built into emacs, gedit, and vim.
There are also online potions such us &lt;a href=&quot;http://daringfireball.net/projects/markdown/dingus&quot;&gt;Dingus&lt;/a&gt; and &lt;a href=&quot;https://stackedit.io/&quot;&gt;StackEdit&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;p&gt;The best way to understand markdown is to see it in use, here we can see a left column with the Markdown input and right column with the HTML output:&lt;/p&gt;

&lt;h4 id=&quot;headers&quot;&gt;Headers&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Level&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Header&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;====================&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Second&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Level&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Header&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---------------------&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;###&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Another&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;deeper&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;heading&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Level&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Second&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Level&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Another&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;deeper&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;heading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;paragraphs&quot;&gt;Paragraphs&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Paragraphs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;separated&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blank&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
 
&lt;span class=&quot;nt&quot;&gt;Let&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;break&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Paragraphs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;separated&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blank&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Let&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;blockquote&quot;&gt;Blockquote&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;##&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;H2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;H2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;emphasize&quot;&gt;Emphasize&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;Some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;these&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;emphasized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*.&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;these&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;_are&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;emphasized&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;also_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;Use&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;asterisks&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;emphasis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**.&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Or&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;prefer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;__use&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;underscores&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;instead__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;these&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;emphasized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;these&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;emphasized&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;also&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Use&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;asterisks&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;emphasis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Or&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;prefer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;underscores&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;instead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;links&quot;&gt;Links&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;With a Title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://example.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://example.com/&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;With a Title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;lists&quot;&gt;Lists&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;Candy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;Gum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;Booze&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Unordered&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;bulleted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lists&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;asterisks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pluses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hyphens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(*,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;markers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;Red&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;Green&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;Blue&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;And&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sub&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;put&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dash&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;star&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;Like&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;And&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Candy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Gum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Booze&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Red&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Green&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Blue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;And&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sub&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;put&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dash&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;star&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Like&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;And&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;traffic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;than&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Yahoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;MSN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;        &lt;span class=&quot;s2&quot;&gt;&amp;quot;Google&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.yahoo.com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Yahoo Search&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.msn.com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;MSN Search&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;traffic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://google.com/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Google&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;than&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://search.yahoo.com/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Yahoo Search&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Yahoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://search.msn.com/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;MSN Search&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;MSN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;image&quot;&gt;Image&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;alt&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.jpg&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Title&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/path/to/img.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;alt text&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Title&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/markdown-syntax/&quot;&gt;Markdown syntax introduction&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on October 26, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Engineering culture at Spotify]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/engineering-culture-at-Spotify/" />
  <id>http://juan.pallares.me/engineering-culture-at-Spotify</id>
  <updated>2014-10-11T00:00:00-00:00</updated>
  <published>2014-10-10T00:00:00+02:00</published>
  
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;Sometimes people think Agile is only for small companies and impossible for the big ones. 
Here you have an example how it can be also implemented in a large organization such as &lt;a href=&quot;https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/&quot;&gt;Spotify&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src=&quot;//player.vimeo.com/video/85490944?byline=0&quot; width=&quot;500&quot; height=&quot;313&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;http://vimeo.com/85490944&quot;&gt;Spotify Engineering Culture - part 1&lt;/a&gt; from &lt;a href=&quot;http://vimeo.com/user14023874&quot;&gt;Spotify Training &amp;amp; Development&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src=&quot;//player.vimeo.com/video/94950270?byline=0&quot; width=&quot;500&quot; height=&quot;313&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;http://vimeo.com/94950270&quot;&gt;Spotify Engineering Culture - part 2&lt;/a&gt; from &lt;a href=&quot;http://vimeo.com/user14023874&quot;&gt;Spotify Training &amp;amp; Development&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/engineering-culture-at-Spotify/&quot;&gt;Engineering culture at Spotify&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on October 10, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Moving to Jekyll]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/moving-to-jekyll/" />
  <id>http://juan.pallares.me/moving-to-jekyll</id>
  <updated>2014-24-09T00:00:00-00:00</updated>
  <published>2014-09-24T00:00:00+02:00</published>
  
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;p&gt;After some time using a very simple google site as landing page and a blogger blog I decided to move everything to &lt;a href=&quot;https://pages.github.com&quot;&gt;Github pages&lt;/a&gt; + &lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In my humble opinion under this platform everything looks way more professional. 
To achieve this look a I used &lt;a href=&quot;http://mademistakes.com/articles/minimal-mistakes-jekyll-theme/&quot;&gt;Minimal Mistakes Jekyll theme&lt;/a&gt;.
It comes with very cool fetures such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Minimal design.&lt;/li&gt;
  &lt;li&gt;Responsive layouts. Looks good on mobile, tablets, and desktop devices.&lt;/li&gt;
  &lt;li&gt;Author sidebar with optional links to social media profiles.&lt;/li&gt;
  &lt;li&gt;Disqus comments.&lt;/li&gt;
  &lt;li&gt;Google analytics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to import all my previous posts from blogger I just used the blogger2jekyll tool, following the steps &lt;a href=&quot;http://blog.slaks.net/2013-05-31/migrating-from-blogger-to-jekyll&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blogger2jekyll&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;blogger2jekyll&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blog-dd-mm-yyyy&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_posts&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I had some issues because by default it disabled the comments on the posts, or considered the tags as categories but I didn’t have so much posts so I just changed them after manually.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An important thing for me is that githubpages is for free, also if you use our own domain because I’m not posting everyday and I don’t plan to monetize the site,
 I just want a cool landing page and blog.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I still need to get used to markdown language, and to “commit” my new posts but hope I can write more often in this platform.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/moving-to-jekyll/&quot;&gt;Moving to Jekyll&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on September 24, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Programar limpio. Clean Code: A Handbook of Agile Software Craftsmanship. Robert C. Martin]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/programar-limpio-clean-code-handbook-of/" />
  <id>http://juan.pallares.me/programar-limpio-clean-code-handbook-of</id>
  <published>2014-04-21T17:15:00+02:00</published>
  <updated>2014-04-21T17:15:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
Me acabo de leer el libro &lt;a href=&quot;http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot; target=&quot;_blank&quot;&gt;Clean Code&lt;/a&gt;, de Robet C. Martin. Lo he encontrado muy interesante y a pesar que los ejemplos son en Java (y no C# por ejemplo) no es relevante de cara a entender los conceptos que explica. Lo recomiendo encarecidamente.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-UcU6wS0YRNc/U1VRTY873PI/AAAAAAAAup0/GjqxlKiR5r0/s1600/41XojFFhYlL._SS500_.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-UcU6wS0YRNc/U1VRTY873PI/AAAAAAAAup0/GjqxlKiR5r0/s1600/41XojFFhYlL._SS500_.jpg&quot; height=&quot;320&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Empieza explicando como programar correctamente diferentes aspectos (nombres, funciones, comentarios, formateos, manejo de errores, clases, etc..) para luego hacer un ejemplo práctico de refactoring.&lt;br /&gt;Acaba con una recopilación de &quot;Code smells&quot;, problemas típicos en el código que hay que evitar (y refactorizar si lo encontramos)&lt;br /&gt;&lt;br /&gt;También comenta de paso los principios SOLID y otros conceptos muy importante que nunca esta de más recordar.&lt;br /&gt;&lt;br /&gt;Ahora probaré a con la segunda parte (&lt;a href=&quot;http://www.amazon.es/The-Clean-Coder-Professional-Programmers-ebook/dp/B0050JLC9Y/ref=pd_sim_kinc_1?ie=UTF8&amp;amp;refRID=04YBVE4FECWHJYX6HNCK&quot; target=&quot;_blank&quot;&gt;The Clean Coder&lt;/a&gt;). Os mantengo informados&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/programar-limpio-clean-code-handbook-of/&quot;&gt;Programar limpio. Clean Code: A Handbook of Agile Software Craftsmanship. Robert C. Martin&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on April 21, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Mostrar columnas como una fila separada por comas en Crystal Reports]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/mostrar-columnas-como-una-fila-separada/" />
  <id>http://juan.pallares.me/mostrar-columnas-como-una-fila-separada</id>
  <published>2014-03-06T19:30:00+01:00</published>
  <updated>2014-03-06T19:30:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-ONNIymTq6k8/UxMfiA0IJfI/AAAAAAAAt5I/g7pIhUjeMRo/s1600/descarga.jpeg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://4.bp.blogspot.com/-ONNIymTq6k8/UxMfiA0IJfI/AAAAAAAAt5I/g7pIhUjeMRo/s1600/descarga.jpeg&quot; height=&quot;61&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Usamos actualmente Crystal Reports para mostrar facturas, presupuestos, balances y demás información. Uno de los últimos requerimientos era mostrar la información en una sola línea separada por comas en lugar de una columna. Antes:&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;CONCEPTO &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PRECIO&lt;br /&gt;concepto1 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;24€&lt;br /&gt;concepto1 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;10€&lt;br /&gt;concepto1 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;40€&lt;br /&gt;concepto2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;15€&lt;br /&gt;concepto2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5% &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;10€&lt;/blockquote&gt;Después:&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;CONCEPTO&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PRECIO&lt;br /&gt;concepto1 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3% 24€, 5% 10€, 2% 40€&lt;br /&gt;concepto2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4% 15€, 5% 10€&lt;/blockquote&gt;Para poder realizar esto hay dos puntos claves, la instrucción &quot;WhilePrintingRecords&quot; y una variable global, una variable que pueda ser accedida desde fórmulas diferentes.&lt;br /&gt;&lt;br /&gt;Pasamos a comentar paso por paso. Lo primero es crear una fórmula en el Detalle, el cual suprimiremos (ocultaremos). Fijaos que esta en sintaxis VisualBasic&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;WhilePrintingRecords&lt;br /&gt;&lt;br /&gt;global precioList as string&lt;br /&gt;&lt;br /&gt;if len(precioList&amp;nbsp;) = 0 then&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;precioList&amp;nbsp;= {db.porcentajeVariable} + &quot; &amp;nbsp;&quot;&amp;nbsp;+&amp;nbsp;{db.precioVariable}&lt;br /&gt;else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;precioList&amp;nbsp;=&amp;nbsp;precioList&amp;nbsp;+ &quot;, &quot; + {db.porcentajeVariable}&amp;nbsp;+ &quot; &amp;nbsp;&quot;&amp;nbsp;+&lt;br /&gt;&amp;nbsp;{db.nombreVariable}&lt;br /&gt;end if&lt;br /&gt;&lt;br /&gt;formula = &quot;&quot;&lt;/blockquote&gt;El segundo paso es crear otra formula en el pie de grupo donde mostraremos el acumulado y lo reiniciaremos:&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;WhilePrintingRecords&lt;br /&gt;global nameList as string&lt;br /&gt;formula = nameList&lt;br /&gt;nameList = &quot;&quot;&lt;/blockquote&gt;Espero que os sirva!&lt;br /&gt;&lt;br /&gt;Fuente &lt;a href=&quot;http://scn.sap.com/thread/1620836&quot; target=&quot;_blank&quot;&gt;Foro SAP Community Network&lt;/a&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/mostrar-columnas-como-una-fila-separada/&quot;&gt;Mostrar columnas como una fila separada por comas en Crystal Reports&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on March 06, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Problemas con NuGet conectando a través de un proxy (Error 407 Proxy Authentication Required)]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/problemas-con-nuget-conectando-traves/" />
  <id>http://juan.pallares.me/problemas-con-nuget-conectando-traves</id>
  <published>2014-02-27T20:00:00+01:00</published>
  <updated>2014-02-27T20:00:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
Me encontré el otro día con que no podía instalar paquetes desde NuGet en Visual Studio 2010. El error era &lt;i&gt;&quot;Error 407 Proxy Authentication Required&quot;&lt;/i&gt;. No funcionaba tampoco desde la &lt;i&gt;Package Manager Console&lt;/i&gt;. Recordé que recientemente había actualizado la password que usaba para el proxy (bueno, realmente estaba obligado por la política de caducidad).&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-QoNckcdN0vw/UxB7MxkeFDI/AAAAAAAAtxk/y6l-nr9Tbb0/s1600/nuget.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-QoNckcdN0vw/UxB7MxkeFDI/AAAAAAAAtxk/y6l-nr9Tbb0/s1600/nuget.png&quot; height=&quot;97&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;Al parecer NuGet no reconocía esta nueva password, aunque me la solicitara y yo la introdujera internamente no la actualizaba porque seguía saliendo el error.&lt;br /&gt;&lt;br /&gt;Al final, como no, &lt;a href=&quot;http://stackoverflow.com/questions/9232160/nuget-behind-proxy&quot; target=&quot;_blank&quot;&gt;stackoverflow al rescate&lt;/a&gt;. La solución era configurar la password mediante el fichero NuGet.config que podemos encontrar en &lt;em style=&quot;background-color: white; border: 0px; font-family: Arial, &#39;Liberation Sans&#39;, &#39;DejaVu Sans&#39;, sans-serif; font-size: 14px; line-height: 17.804800033569336px; margin: 0px; padding: 0px; vertical-align: baseline;&quot;&gt;C:\Users\nombreusuario\AppData\Roaming,&amp;nbsp;&lt;/em&gt;al menos en mi máquina con Windows 7.&lt;br /&gt;&lt;br /&gt;Para poder añadir estos campos al fichero XML la mejor opción es bajarse &lt;a href=&quot;http://nuget.codeplex.com/releases/view/100803&quot; target=&quot;_blank&quot;&gt;NuGet.exe desde aquí&lt;/a&gt; y ejecutar los siguientes comandos:&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;nuget.exe config -set http_proxy=http://my.proxy.address:port&lt;br /&gt;nuget.exe config -set http_proxy.user=mydomain\myUserName&lt;br /&gt;nuget.exe config -set http_proxy.password=mySuperSecretPassword&lt;/blockquote&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/problemas-con-nuget-conectando-traves/&quot;&gt;Problemas con NuGet conectando a través de un proxy (Error 407 Proxy Authentication Required)&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on February 27, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Windows 8.1 - Arreglar error "We weren't able to connect to the store..."]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/windows-81-arreglar-error-we-werent/" />
  <id>http://juan.pallares.me/windows-81-arreglar-error-we-werent</id>
  <published>2013-08-25T11:03:00+02:00</published>
  <updated>2013-08-25T11:03:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-keMk4FxND_4/UhnjBUIO3sI/AAAAAAAArMo/JoTFyOgs7h8/s1600/windows_81v2-590x327.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;177&quot; src=&quot;http://1.bp.blogspot.com/-keMk4FxND_4/UhnjBUIO3sI/AAAAAAAArMo/JoTFyOgs7h8/s320/windows_81v2-590x327.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Hola,&lt;br /&gt;&lt;br /&gt;Si os habéis decidido por probar la beta de Windows 8.1 puede que os hayais encontrado con el siguiente error al intentar entrar a la Windows Store&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;background-color: white; color: #333333; font-family: Georgia, &#39;Bitstream Charter&#39;, serif; font-size: 16px; line-height: 24px;&quot;&gt;“We weren’t able to connect to the store. This might have happened because of a server problem or the network connection timed out. Please wait a few minutes and try again.”&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;No había forma de acceder a la Store, incluso reiniciando, hice búsquedas porque al parecer es un &quot;known issue&quot; pero lo único que sirvió fué verificar la cuenta de usuario. Dentro de la configuración de cuentas, en vuestra cuenta, saldrá un link (debajo del mail) para verificar vuestro usuario y introducir la contraseña por enésima vez. Una vez hecho esto, desaparece el link y la Windows Store volverá a funcionar.&lt;br /&gt;&lt;br /&gt;Esta es la apariencia de mi cuenta una vez verificada:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-6aLLe7C6WmU/UhnjtQN9eSI/AAAAAAAArMw/nNeRLAif6D8/s1600/Captura.PNG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;297&quot; src=&quot;http://4.bp.blogspot.com/-6aLLe7C6WmU/UhnjtQN9eSI/AAAAAAAArMw/nNeRLAif6D8/s400/Captura.PNG&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/windows-81-arreglar-error-we-werent/&quot;&gt;Windows 8.1 - Arreglar error &quot;We weren&#39;t able to connect to the store...&quot;&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on August 25, 2013.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Media Center automatizado (II) XBMC vs. Plex]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/media-center-automatizado-ii-xbmc-vs/" />
  <id>http://juan.pallares.me/media-center-automatizado-ii-xbmc-vs</id>
  <published>2013-07-09T16:37:00+02:00</published>
  <updated>2013-07-09T16:37:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
Como explique en la entrada anterior,&lt;a href=&quot;http://blog.pallares.me/2013/06/media-center-automatizado-i-descarga.html&quot; target=&quot;_blank&quot;&gt; ya tenemos nuestros episodios y películas bajados y clasificados&lt;/a&gt;. Ahora necesitamos acceder a ellos y reproducirlos cómodamente. Las dos opciones gratuitas más comunes para gestionar un media center suelen ser Plex y XBMC. Es importante mencionar que son opciones parecidas pues Plex es un fork de XBMC en 2008.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-amKiqbSDUis/UdwlzRXIB7I/AAAAAAAAqjc/cRTnZePDYR0/s1600/as-the-xbmc.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;133&quot; src=&quot;http://3.bp.blogspot.com/-amKiqbSDUis/UdwlzRXIB7I/AAAAAAAAqjc/cRTnZePDYR0/s200/as-the-xbmc.gif&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;a href=&quot;http://xbmc.org/&quot; target=&quot;_blank&quot;&gt;XBMC&lt;/a&gt;&amp;nbsp;es la opción que permite más opciones, mas configuración. Originalmente apareció para ser instalado sobre una Xbox (de ahí el nombre) pero actualmente se puede instalar prácticamente sobre cualquier SO, incluso Android.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Tiene una cantidad ingente de plugins y personalmente estoy enamorado del plugin de subtitulos que los busca de forma muy comoda (un click) y lo auto-asocia al vídeo que se esta reproduciendo al instante. Olvídate del tediosos proceso: búsqueda, descarga de un .zip, descomprimir, renombrar.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Esta pensado para estar debajo de tu TV y reproducir el contenido ahí, en otras palabras, no esta pensado para actuar como servidor, importante este punto en comparación con Plex.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Tiene también muchos skins para adaptar su aspecto a tus gustos.&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-Ue-976ElejM/UdwlzjU_xUI/AAAAAAAAqjg/ln9tEZtTM2A/s1600/plex-icon.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: left;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;http://1.bp.blogspot.com/-Ue-976ElejM/UdwlzjU_xUI/AAAAAAAAqjg/ln9tEZtTM2A/s200/plex-icon.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;a href=&quot;http://www.plexapp.com/&quot; target=&quot;_blank&quot;&gt;Plex&lt;/a&gt; es más sencillo, más practico, instala, dime donde están los vídeos y a funcionar. Puedes echar a faltar los plugins y skins pero a cambio tienes un servidor. Para que lo quiero? Pues muy fácil, empiezo una película en la TV del salón pero la dejo a medias, al día siguiente me apetece verla desde el ordenador en otra habitación pues Plex ya me sugiere seguir desde el mismo lugar donde la dejé de ver. Pero es más, que estoy de viaje (y tengo una buena conexión de red) y me apetece ver ese capítulo desde el móvil, pues también se puede con la aplicación Plex de móvil (iOS, Android, Windows Phone). Además Plex se ocupa de transformar el vídeo al tamaño y calidad de cada dispositivo cliente, de forma transparente, not bad!&lt;br /&gt;Las últimas televisiones Samsung y LG suelen tener la opción de instalar un cliente Plex, por lo que es posible tener un ordenador en una cuarto oscuro con Plex instalado y la TV accediendo via wifi, un trasto menos en el comedor.&lt;br /&gt;&lt;br /&gt;La elección depende mucho de cada caso, gustos y prioridades. En mi caso Plex era sí o sí, pues quería aprovechar un ordenador viejo como servidor y suelo ver vídeo desde al menos dos lugares, comedor y habitación. Además filebot ya se ocupaba de descargarme subtítulos por lo que no necesitaba el plugin de XBMC&lt;br /&gt;&lt;br /&gt;Pero hay una tercera vía, para quien quiera lo mejor de ambos mundos:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://wiki.xbmc.org/?title=Add-on%3APleXBMC&quot; target=&quot;_blank&quot;&gt;PleXBMC&lt;/a&gt; - Un plugin para XBMC que permite acceder y reproducir el contenido de un servidor Plex. Así podrías tener un servidor Plex y un cliente XBMC, lo he probado y funciona sin problemas.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/media-center-automatizado-ii-xbmc-vs/&quot;&gt;Media Center automatizado (II) XBMC vs. Plex&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on July 09, 2013.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Media Center automatizado (I) Descarga automática de series / películas y clasificación]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/media-center-automatizado-i-descarga/" />
  <id>http://juan.pallares.me/media-center-automatizado-i-descarga</id>
  <published>2013-06-30T10:04:00+02:00</published>
  <updated>2013-06-30T10:04:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://www.blogcdn.com/www.engadget.com/media/2009/05/9-27-07-dma2200-front-shot_reflecti.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;194&quot; src=&quot;http://www.blogcdn.com/www.engadget.com/media/2009/05/9-27-07-dma2200-front-shot_reflecti.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;Sigo varias series que no se emiten aquí y las descargo. Así las veo cuando quiero y sin publicidad. También me he aficionado a ver las películas en versión original.&lt;br /&gt;&lt;br /&gt;Desde tiempo atrás quería automatizar el proceso de búsqueda y descarga, por comodidad y también porque a veces no me entero que ha empezado una temporada nueva. Importante decir que las veo en versión original, por lo que hay mucha mas gente compartiendo y son más fáciles de encontrar y descargar.&lt;br /&gt;&lt;br /&gt;Tengo un ordenador de sobremesa bastante olvidado, mi antiguo pc gamer, y decidí que ese sería mi nuevo media center.&lt;br /&gt;&lt;br /&gt;En este primer paso del tutorial vamos a ver como descargar automaticamente de forma desatendida.&lt;br /&gt;&lt;br /&gt;Vamos con los ingredientes:&lt;br /&gt;- &lt;a href=&quot;http://www.utorrent.com/&quot; target=&quot;_blank&quot;&gt;uTorrent&lt;/a&gt; - Mi cliente torrent preferido, puedes usar otro si quiere pero debe soportar RSS&lt;br /&gt;&lt;br /&gt;- &lt;a href=&quot;http://showrss.karmorra.info/&quot; target=&quot;_blank&quot;&gt;showRSS&lt;/a&gt; - Este servicio generará un RSS con las series que le indiques. No tiene mucho misterio, te registras, escoges tus series y copiar el RSS y lo añades a utorrent. Sección feeds botón derecho, añadir&lt;br /&gt;&lt;br /&gt;- &lt;a href=&quot;http://filebot.net/&quot; target=&quot;_blank&quot;&gt;fileBot&lt;/a&gt; - Renombrador y organizador de series/pelis. En este caso instalar sin más.&lt;br /&gt;&lt;br /&gt;- &lt;a href=&quot;http://www.filebot.net/forums/viewtopic.php?f=4&amp;amp;t=215&quot; target=&quot;_blank&quot;&gt;script de FileBot para uTorrent&lt;/a&gt; - Aquí viene lo mejor. Este script se ejecutará cuando tus torrents (que se han bajado automáticamente) acaben de bajarse:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Descomprimir fichero si viene en zip/rar&lt;/li&gt;&lt;li&gt;Distingue entre películas y series y las gestiona por separado&lt;/li&gt;&lt;li&gt;Descarga los&amp;nbsp;subtítulos&amp;nbsp;que correspondan en el idioma que indiques&lt;/li&gt;&lt;li&gt;Los clasifica siguiendo este esquema:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Peliculas&amp;nbsp;{output}/Movies/Name (Year)/Name (Year) [CD123].ext&lt;/li&gt;&lt;li&gt;Series&amp;nbsp;{output}/TV Shows/Name/Season N/Name - S00E00 - Title.ext&lt;/li&gt;&lt;li&gt;Musica&amp;nbsp;{output}/Music/Artist/Album/Artist - Title.ext&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Descarga carátulas y más media&lt;/li&gt;&lt;li&gt;Notifica XBMC or Plex (más sobre esto en próximos posts)&lt;/li&gt;&lt;li&gt;Envía report por email&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Tenéis información sobre más posibilidades en el foro enlazado arriba, pero con esto tendremos más que suficiente. Para configurarlo, en &quot;uTorrent -&amp;gt; Preferences -&amp;gt; Run program -&amp;gt; Run program when torrent finishes&quot; pegamos:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: white; color: #0b5690; font-family: monospace; font-size: 12px; font-weight: bold; line-height: 16.796875px;&quot;&gt;filebot -script fn:amc --output &quot;X:/path/to/media&quot; --log-file amc.log --action copy --conflict override -non-strict --def music=y subtitles=en artwork=y &quot;ut_dir=%D&quot; &quot;ut_file=%F&quot; &quot;ut_kind=%K&quot; &quot;ut_title=%N&quot; &quot;ut_label=%L&quot; &quot;ut_state=%S&quot;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Cambiamos el output a la carpeta que nos interese, podemos añadir subtítulos en castellano con subtitles=en,es y FIN!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Ejecución manual del script&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Tengo que confesar que por algún motivo, este script no se ejecuta siempre, algo en utorrent no tengo configurado correctamente y provoca que acabe la descarga pero no ejecute el script. En estos casos ejecuto el script de forma manual con un fichero .bat especificando la carpeta de origen:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: white; color: #0b5690; font-family: monospace; font-size: 12px; font-weight: bold; line-height: 16.796875px;&quot;&gt;filebot -script fn:amc &quot;/path/to/input/&quot; --output &quot;X:/path/to/output&quot; --action copy -non-strict&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Importante decir que hay que ejecutarlo como Administrador&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ahora ya tenemos los vídeos, falta reproducirlos de forma cómoda. En la próxima comentaré la comparativa que hice de XBMC y Plex, por cual me decidí y como integrarlo con el sistema de descarga automática que hemos montado hoy&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/media-center-automatizado-i-descarga/&quot;&gt;Media Center automatizado (I) Descarga automática de series / películas y clasificación&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on June 30, 2013.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Situaciones en la vida del programador]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/situaciones-en-la-vida-del-programador/" />
  <id>http://juan.pallares.me/situaciones-en-la-vida-del-programador</id>
  <published>2013-04-30T10:58:00+02:00</published>
  <updated>2013-04-30T10:58:00+02:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
Algo de humor, muchos os&amp;nbsp;sentiréis&amp;nbsp;identificados:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;Cuando leo un documento técnico escrito por el equipo de marketing&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img alt=&quot;Cuando leo un documento técnico escrito por el equipo de marketing&quot; border=&quot;0&quot; height=&quot;270&quot; src=&quot;http://helektron.com/wp-content/uploads/2013/02/Cuando-leo-un-documento-t%C3%A9cnico-escrito-por-el-marketing.gif&quot; style=&quot;border: 0px; box-sizing: border-box; height: auto; margin: 0px; max-width: 100%; padding: 0px;&quot; width=&quot;447&quot; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;Cuando el product manager utiliza jerga de desarrolladores&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img alt=&quot;Cuando el product manager utiliza jerga de desarrolladores&quot; border=&quot;0&quot; height=&quot;240&quot; src=&quot;http://helektron.com/wp-content/uploads/2013/02/Cuando-el-product-manager-utiliza-jerga-de-desarrolladores.gif&quot; style=&quot;border: 0px; box-sizing: border-box; height: auto; margin: 0px; max-width: 100%; padding: 0px;&quot; width=&quot;320&quot; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;Cuando hago una puesta en producción&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img alt=&quot;code-34&quot; height=&quot;253&quot; src=&quot;http://helektron.com/wp-content/uploads/2013/02/Situaciones-en-la-vida-de-un-programador-34.gif&quot; style=&quot;border: 0px; box-sizing: border-box; height: auto; margin: 0px; max-width: 100%; padding: 0px;&quot; width=&quot;480&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;Cuando mi regexp devuelve exactamente eso que esperaba&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img alt=&quot;code-03&quot; border=&quot;0&quot; height=&quot;130&quot; src=&quot;http://helektron.com/wp-content/uploads/2013/02/Situaciones-en-la-vida-de-un-programador-3.gif&quot; style=&quot;border: 0px; box-sizing: border-box; height: auto; margin: 0px; max-width: 100%; padding: 0px;&quot; width=&quot;270&quot; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;Cuando el becario me propone realizar la web con Joomla!&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img alt=&quot;code-05&quot; border=&quot;0&quot; height=&quot;285&quot; src=&quot;http://helektron.com/wp-content/uploads/2013/02/Situaciones-en-la-vida-de-un-programador-5.gif&quot; style=&quot;border: 0px; box-sizing: border-box; height: auto; margin: 0px; max-width: 100%; padding: 0px;&quot; width=&quot;245&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;Cuando el jefe de proyecto salta sobre mi pantalla por sorpresa&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img alt=&quot;code-20&quot; border=&quot;0&quot; height=&quot;288&quot; src=&quot;http://helektron.com/wp-content/uploads/2013/02/Situaciones-en-la-vida-de-un-programador-20.gif&quot; style=&quot;border: 0px; box-sizing: border-box; height: auto; margin: 0px; max-width: 100%; padding: 0px;&quot; width=&quot;216&quot; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;Cuando mostramos a cliente una genial pero aún incompleta funcionalidad al cliente&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #666666; font-family: &#39;Lucida Grande&#39;, Arial, &#39;Lucida Sans Unicode&#39;, sans-serif; font-size: 13px; line-height: 19px; margin-bottom: 1.2em; padding: 0px;&quot;&gt;&lt;img src=&quot;http://24.media.tumblr.com/e18488212d4b2e24c6802df28282dc03/tumblr_mlibgaIlUD1rk30kxo1_250.gif&quot; /&gt;&lt;/div&gt;&lt;br /&gt;Más aquí:&lt;br /&gt;&lt;a href=&quot;http://helektron.com/situaciones-en-la-vida-de-un-programador/&quot;&gt;http://helektron.com/situaciones-en-la-vida-de-un-programador/&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;http://thejoysofcode.com/&quot;&gt;http://thejoysofcode.com/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/situaciones-en-la-vida-del-programador/&quot;&gt;Situaciones en la vida del programador&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on April 30, 2013.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Tratando XML multiref en Biztalk]]></title>
  <link rel="alternate" type="text/html" href="http://juan.pallares.me/tratando-xml-multiref-en-biztalk/" />
  <id>http://juan.pallares.me/tratando-xml-multiref-en-biztalk</id>
  <published>2013-02-14T09:13:00+01:00</published>
  <updated>2013-02-14T09:13:00+01:00</updated>
  <author>
    <name>Juan Pallarès</name>
    <uri>http://juan.pallares.me</uri>
    <email>juan@pallares.me</email>
  </author>
  <content type="html">
    &lt;div class=&quot;css-full-post-content js-full-post-content&quot;&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-XRewEOvAM04/UxB7pO6R22I/AAAAAAAAtxs/nQX45MgPwdI/s1600/biztalk-logo.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/-XRewEOvAM04/UxB7pO6R22I/AAAAAAAAtxs/nQX45MgPwdI/s1600/biztalk-logo.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: justify;&quot;&gt;Atacando un servicio desde Biztalk, me encontré con que este me devolvía el XML en un formato no aceptado por Biztalk. Tenía etiquetas multiref y esto no le gustaba.&lt;/div&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;soapenv:Body&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;ns1:sendSmsSubmissionResponse soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;http://mobicomp.com/smsexpress/webservice/server/message&quot;&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;sendSmsSubmissionReturn href=&quot;#id0&quot; /&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;/ns1:sendSmsSubmissionResponse&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;multiRef id=&quot;id0&quot; soapenc:root=&quot;0&quot; soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xsi:type=&quot;ns2:SubmissionStatus&quot; xmlns:soapenc=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns2=&quot;http://mobicomp.com/smsexpress/webservice/server/message&quot;&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;id xsi:type=&quot;soapenc:string&quot;&amp;gt;4336723&amp;lt;/id&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;message xsi:type=&quot;soapenc:string&quot;&amp;gt;Submisso enviada para processamento.&amp;lt;/message&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;status href=&quot;#id1&quot; /&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;/multiRef&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;multiRef id=&quot;id1&quot; soapenc:root=&quot;0&quot; soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xsi:type=&quot;xsd:int&quot; xmlns:soapenc=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&amp;gt;0&amp;lt;/multiRef&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;/soapenv:Body&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;/soapenv:Envelope&amp;gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;Para poder tratarlo en Biztalk, tuve que desarollar un pequeño código XSL (stylesheet) que después introduje en la Pipeline de entrada custom para decodificarlo.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&amp;lt;xsl:stylesheet version=&quot;1.0&quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xmlns:soapenc=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xmlns:ns2=&quot;http://mobicomp.com/smsexpress/webservice/server/message&quot;&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;xsl:key name=&quot;multiref-by-id&quot; match=&quot;multiRef&quot; use=&quot;@id&quot;/&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;xsl:template match=&quot;/&quot;&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;xsl:copy&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;xsl:apply-templates select=&quot;@* |*&quot;/&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;/xsl:copy&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;/xsl:template&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;xsl:template match=&quot;*[starts-with(@href, &#39;#&#39;)]&quot;&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;lt;xsl:copy&amp;gt; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;xsl:apply-templates select=&quot;@* |&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key(&#39;multiref-by-id&#39;, substring-after(@href, &#39;#&#39;))/@*[not(local-name()=&#39;id&#39; or local-name()=&#39;type&#39;)] |&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; key(&#39;multiref-by-id&#39;, substring-after(@href, &#39;#&#39;))/node()&quot;/&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;/xsl:copy&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;/xsl:template&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;xsl:template match=&quot;@href[starts-with(., &#39;#&#39;)] | multiRef[@id] | @soapenc:root&quot;/&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;xsl:template match=&quot;@*|node()&quot;&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;xsl:copy&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;xsl:apply-templates select=&quot;@*|node()&quot;/&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&amp;lt;/xsl:copy&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;/xsl:template&amp;gt;&lt;br /&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;Una vez hecho esto, todo funcionó como la seda. Para el .xsl me inspiré en &lt;a href=&quot;http://stackoverflow.com/questions/5185389/creating-xslt-transform-to-flatten-multiref-encoded-soap-message&quot; target=&quot;_blank&quot;&gt;esta respuesta de StackOverflow&lt;/a&gt;
&lt;/div&gt;
    &lt;p&gt;&lt;a href=&quot;http://juan.pallares.me/tratando-xml-multiref-en-biztalk/&quot;&gt;Tratando XML multiref en Biztalk&lt;/a&gt; was originally published by Juan Pallarès at &lt;a href=&quot;http://juan.pallares.me&quot;&gt;Juan Pallarès Garbí&lt;/a&gt; on February 14, 2013.&lt;/p&gt;
  </content>
</entry>

</feed>
